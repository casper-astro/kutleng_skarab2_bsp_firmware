#*****************************************************************************************
# Vivado (TM) v2018.2 (64-bit)
#
# ethmacvcu118.tcl: Tcl script for re-creating project 'ethernetmacphy'
#
# Generated by Vivado on Mon Jul 30 14:10:27 +0200 2018
# IP Build 2256618 on Thu Jun 14 22:10:49 MDT 2018
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************

# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set _xil_proj_name_ "vcu118projectpr"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name
}

variable script_file
set script_file "ethmacvcu118pr.tcl"

#Set and make the output directory where all the generated files and reports will be stored
set outputDir $origin_dir/../project_flow/${_xil_proj_name_}
file mkdir $outputDir

#create project
create_project ${_xil_proj_name_} $outputDir -part xcvu9p-flga2104-2L-e -force

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]


# Set project properties
set obj [current_project]
set_property -name "board_part" -value "xilinx.com:vcu118:part0:2.3" -objects $obj
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "platform.board_id" -value "vcu118" -objects $obj
set_property -name "pr_flow" -value "1" -objects $obj
set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "simulator_language" -value "Mixed" -objects $obj
set_property -name "source_mgmt_mode" -value "None" -objects $obj
set_property -name "target_language" -value "VHDL" -objects $obj
set_property -name "webtalk.activehdl_export_sim" -value "40" -objects $obj
set_property -name "webtalk.ies_export_sim" -value "41" -objects $obj
set_property -name "webtalk.modelsim_export_sim" -value "42" -objects $obj
set_property -name "webtalk.questa_export_sim" -value "41" -objects $obj
set_property -name "webtalk.riviera_export_sim" -value "40" -objects $obj
set_property -name "webtalk.vcs_export_sim" -value "40" -objects $obj
set_property -name "webtalk.xsim_export_sim" -value "42" -objects $obj
set_property -name "xpm_libraries" -value "XPM_CDC XPM_FIFO XPM_MEMORY" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set IP repository paths
set obj [get_filesets sources_1]
set_property "ip_repo_paths" "[file normalize "$origin_dir/../../../sources/bd/iprepo"]" $obj

# Rebuild user ip_repo's index before adding any source files
update_ip_catalog -rebuild


#Project op level file
add_files $origin_dir/../../../sources/vhdl/implementation/xilinx/vcu118/top/gmactop.vhd

#LED files
add_files $origin_dir/../../../sources/vhdl/rtl/ledblinker/ledflasher.vhd
add_files $origin_dir/../../../sources/vhdl/rtl/ledblinker/partialblinker.vhd


#MAC + PHY 1
add_files $origin_dir/../../../sources/vhdl/implementation/xilinx/vcu118/top/gmacqsfp1top.vhd

#MAC + PHY 2
add_files $origin_dir/../../../sources/vhdl/implementation/xilinx/vcu118/top/gmacqsfp2top.vhd

#CMAC-PHY{n}
add_files $origin_dir/../../../sources/vhdl/rtl/macphy/mac100gphy.vhd

#Packet ring buffers
add_files $origin_dir/../../../sources/vhdl/rtl/ringbuffer/packetramsp.vhd
add_files $origin_dir/../../../sources/vhdl/rtl/ringbuffer/packetramdp.vhd
add_files $origin_dir/../../../sources/vhdl/rtl/ringbuffer/packetringbuffer.vhd
add_files $origin_dir/../../../sources/vhdl/rtl/ringbuffer/packetstatusram.vhd
add_files $origin_dir/../../../sources/vhdl/rtl/ringbuffer/cpuifreceiverpacketringbuffer.vhd
add_files $origin_dir/../../../sources/vhdl/rtl/ringbuffer/cpuifsenderpacketringbuffer.vhd
add_files $origin_dir/../../../sources/vhdl/rtl/ringbuffer/dualportpacketringbuffer.vhd
add_files $origin_dir/../../../sources/vhdl/rtl/ringbuffer/cpudualportpacketringbuffer.vhd
add_files $origin_dir/../../../sources/vhdl/rtl/ringbuffer/truedualportpacketringbuffer.vhd


#L-BUS <=> AXIS
add_files $origin_dir/../../../sources/vhdl/rtl/lbustoaxis/lbustoaxis.vhd

#AXIS => L-BUS
add_files $origin_dir/../../../sources/vhdl/rtl/lbustoaxis/mapaxisdatatolbus.vhd
add_files $origin_dir/../../../sources/vhdl/rtl/lbustoaxis/maptkeeptomty.vhd
add_files $origin_dir/../../../sources/vhdl/rtl/lbustoaxis/lbustxaxisrx.vhd

#L-BUS => AXIS
add_files $origin_dir/../../../sources/vhdl/rtl/lbustoaxis/maplbusdatatoaxis.vhd
add_files $origin_dir/../../../sources/vhdl/rtl/lbustoaxis/mapmtytotkeep.vhd
add_files $origin_dir/../../../sources/vhdl/rtl/lbustoaxis/lbusrxaxistx.vhd

#ARP (APP Module)
add_files $origin_dir/../../../sources/vhdl/rtl/arp/arpramadpwr.vhd
add_files $origin_dir/../../../sources/vhdl/rtl/arp/arpramadpwrr.vhd
add_files $origin_dir/../../../sources/vhdl/rtl/arp/ramdpwr.vhd
add_files $origin_dir/../../../sources/vhdl/rtl/arp/ramdpwrr.vhd
add_files $origin_dir/../../../sources/vhdl/rtl/arp/arpreceiver.vhd
add_files $origin_dir/../../../sources/vhdl/rtl/arp/arpmodule.vhd
add_files $origin_dir/../../../sources/vhdl/rtl/arp/arpcache.vhd

#UDP Server (APP Module)
add_files $origin_dir/../../../sources/vhdl/rtl/udp/macinterface/macifudpserver.vhd
add_files $origin_dir/../../../sources/vhdl/rtl/udp/macinterface/macifudpreceiver.vhd
add_files $origin_dir/../../../sources/vhdl/rtl/udp/macinterface/macifudpsender.vhd

#UDP Server (Partial Reconfiguration Module)
add_files $origin_dir/../../../sources/vhdl/implementation/xilinx/general/icapdecoupler.vhd
add_files $origin_dir/../../../sources/vhdl/rtl/preconfig/icapwritersm.vhd
add_files $origin_dir/../../../sources/vhdl/rtl/preconfig/protocolchecksumprconfigsm.vhd
add_files $origin_dir/../../../sources/vhdl/rtl/preconfig/protocolresponderprconfigsm.vhd
add_files $origin_dir/../../../sources/vhdl/rtl/preconfig/prconfigcontroller.vhd 

#UDP Streaming Yellowblock Interface
add_files $origin_dir/../../../sources/vhdl/rtl/udp/udpdatastripper.vhd
add_files $origin_dir/../../../sources/vhdl/rtl/udp/udpdatapacker.vhd
add_files $origin_dir/../../../sources/vhdl/rtl/udp/udpstreamingapp.vhd
add_files $origin_dir/../../../sources/vhdl/rtl/udp/udpstreamingapps.vhd


#CPU Interface Module (APP Module)
add_files $origin_dir/../../../sources/vhdl/rtl/udp/macinterface/cpuinterface/cpumacifudpreceiver.vhd
add_files $origin_dir/../../../sources/vhdl/rtl/udp/macinterface/cpuinterface/cpumacifudpsender.vhd
add_files $origin_dir/../../../sources/vhdl/rtl/udp/macinterface/cpuinterface/cpumacifethernetreceiver.vhd


#Multiplexer Module
add_files $origin_dir/../../../sources/vhdl/rtl/udp/macinterface/axisfabricmultiplexer.vhd
add_files $origin_dir/../../../sources/vhdl/rtl/udp/macinterface/axistwoportfabricmultiplexer.vhd
add_files $origin_dir/../../../sources/vhdl/rtl/udp/macinterface/axisthreeportfabricmultiplexer.vhd


#IP Interconnect
add_files $origin_dir/../../../sources/vhdl/rtl/udp/testcomms.vhd
add_files $origin_dir/../../../sources/vhdl/rtl/udp/udpipinterfacepr.vhd


#Auxillary modules (Not needed for Synthesis but examples for Yellowblock creation)
add_files $origin_dir/../../../sources/vhdl/rtl/udp/casper100gethernetblock.vhd
add_files $origin_dir/../../../sources/vhdl/rtl/udp/vethernetmac.vhd
add_files $origin_dir/../../../sources/vhdl/rtl/udp/casperpcievethernetblock.vhd


# Add Xilinx IP Blocks

#MAC + PHY 1
add_files $origin_dir/../../../sources/ip/vcu118/vitis/ethmacphy100gqsfp14x/EthMACPHY100GQSFP14x.xci

#MAC + PHY 2
add_files $origin_dir/../../../sources/ip/vcu118/vitis/ethmacphy100gqsfp24x/EthMACPHY100GQSFP24x.xci

#AXI FIFO PACKER BUFFER
add_files $origin_dir/../../../sources/ip/vcu118/axispacketbufferfifo/axispacketbufferfifo.xci

#ICAP FIFO 
add_files $origin_dir/../../../sources/ip/vcu118/icapfifo/icapfifo.xci

# Clock Generator
add_files $origin_dir/../../../sources/ip/vcu118/clockgen100mhz/clockgen100mhz.xci

#Microblaze wrapper
add_files $origin_dir/../../../sources/bd/vcu118/microblaze_axi_us_plus/hdl/microblaze_axi_us_plus_wrapper.vhd

#PCIe wrapper
add_files $origin_dir/../../../sources/bd/vcu118/pciexdma_refbd/hdl/pciexdma_refbd_wrapper.vhd



#Debug files
#AXIS ILA
add_files $origin_dir/../../../sources/ip/vcu118/axisila/axisila.xci

#AXIS ILA
add_files $origin_dir/../../../sources/ip/vcu118/resetvio/resetvio.xci


# Adding sources referenced in BDs, if not already added

# Proc to create BD microblaze_axi_us_plus
proc cr_bd_microblaze_axi_us_plus { parentCell } {

  # CHANGE DESIGN NAME HERE
  set design_name microblaze_axi_us_plus

  common::send_msg_id "BD_TCL-003" "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:ip:axi_timebase_wdt:3.0\
  xilinx.com:ip:axi_timer:2.0\
  xilinx.com:ip:axi_uartlite:2.0\
  kutleng.co.za:kutleng:ethernetcore_mm:1.0\
  xilinx.com:ip:mdm:3.2\
  xilinx.com:ip:microblaze:11.0\
  xilinx.com:ip:axi_intc:4.1\
  xilinx.com:ip:xlconcat:2.1\
  xilinx.com:ip:proc_sys_reset:5.0\
  xilinx.com:ip:lmb_bram_if_cntlr:4.0\
  xilinx.com:ip:lmb_v10:3.0\
  xilinx.com:ip:blk_mem_gen:8.4\
  "

   set list_ips_missing ""
   common::send_msg_id "BD_TCL-006" "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_msg_id "BD_TCL-115" "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  if { $bCheckIPsPassed != 1 } {
    common::send_msg_id "BD_TCL-1003" "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  
# Hierarchical cell: microblaze_0_local_memory
proc create_hier_cell_microblaze_0_local_memory { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_microblaze_0_local_memory() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode MirroredMaster -vlnv xilinx.com:interface:lmb_rtl:1.0 DLMB

  create_bd_intf_pin -mode MirroredMaster -vlnv xilinx.com:interface:lmb_rtl:1.0 ILMB


  # Create pins
  create_bd_pin -dir I -type clk LMB_Clk
  create_bd_pin -dir I -type rst SYS_Rst

  # Create instance: dlmb_bram_if_cntlr, and set properties
  set dlmb_bram_if_cntlr [ create_bd_cell -type ip -vlnv xilinx.com:ip:lmb_bram_if_cntlr:4.0 dlmb_bram_if_cntlr ]
  set_property -dict [ list \
   CONFIG.C_ECC {0} \
 ] $dlmb_bram_if_cntlr

  # Create instance: dlmb_v10, and set properties
  set dlmb_v10 [ create_bd_cell -type ip -vlnv xilinx.com:ip:lmb_v10:3.0 dlmb_v10 ]

  # Create instance: ilmb_bram_if_cntlr, and set properties
  set ilmb_bram_if_cntlr [ create_bd_cell -type ip -vlnv xilinx.com:ip:lmb_bram_if_cntlr:4.0 ilmb_bram_if_cntlr ]
  set_property -dict [ list \
   CONFIG.C_ECC {0} \
 ] $ilmb_bram_if_cntlr

  # Create instance: ilmb_v10, and set properties
  set ilmb_v10 [ create_bd_cell -type ip -vlnv xilinx.com:ip:lmb_v10:3.0 ilmb_v10 ]

  # Create instance: lmb_bram, and set properties
  set lmb_bram [ create_bd_cell -type ip -vlnv xilinx.com:ip:blk_mem_gen:8.4 lmb_bram ]
  set_property -dict [ list \
   CONFIG.Enable_B {Use_ENB_Pin} \
   CONFIG.Memory_Type {True_Dual_Port_RAM} \
   CONFIG.Port_B_Clock {100} \
   CONFIG.Port_B_Enable_Rate {100} \
   CONFIG.Port_B_Write_Rate {50} \
   CONFIG.Use_RSTB_Pin {true} \
   CONFIG.use_bram_block {BRAM_Controller} \
 ] $lmb_bram

  # Create interface connections
  connect_bd_intf_net -intf_net microblaze_0_dlmb [get_bd_intf_pins DLMB] [get_bd_intf_pins dlmb_v10/LMB_M]
  connect_bd_intf_net -intf_net microblaze_0_dlmb_bus [get_bd_intf_pins dlmb_bram_if_cntlr/SLMB] [get_bd_intf_pins dlmb_v10/LMB_Sl_0]
  connect_bd_intf_net -intf_net microblaze_0_dlmb_cntlr [get_bd_intf_pins dlmb_bram_if_cntlr/BRAM_PORT] [get_bd_intf_pins lmb_bram/BRAM_PORTA]
  connect_bd_intf_net -intf_net microblaze_0_ilmb [get_bd_intf_pins ILMB] [get_bd_intf_pins ilmb_v10/LMB_M]
  connect_bd_intf_net -intf_net microblaze_0_ilmb_bus [get_bd_intf_pins ilmb_bram_if_cntlr/SLMB] [get_bd_intf_pins ilmb_v10/LMB_Sl_0]
  connect_bd_intf_net -intf_net microblaze_0_ilmb_cntlr [get_bd_intf_pins ilmb_bram_if_cntlr/BRAM_PORT] [get_bd_intf_pins lmb_bram/BRAM_PORTB]

  # Create port connections
  connect_bd_net -net SYS_Rst_1 [get_bd_pins SYS_Rst] [get_bd_pins dlmb_bram_if_cntlr/LMB_Rst] [get_bd_pins dlmb_v10/SYS_Rst] [get_bd_pins ilmb_bram_if_cntlr/LMB_Rst] [get_bd_pins ilmb_v10/SYS_Rst]
  connect_bd_net -net microblaze_0_Clk [get_bd_pins LMB_Clk] [get_bd_pins dlmb_bram_if_cntlr/LMB_Clk] [get_bd_pins dlmb_v10/LMB_Clk] [get_bd_pins ilmb_bram_if_cntlr/LMB_Clk] [get_bd_pins ilmb_v10/LMB_Clk]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports
  set rs232_uart [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:uart_rtl:1.0 rs232_uart ]


  # Create ports
  set ClockStable [ create_bd_port -dir I ClockStable ]
  set PSClock [ create_bd_port -dir I -type clk -freq_hz 125000000 PSClock ]
  set PSReset [ create_bd_port -dir I -type rst PSReset ]
  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_HIGH} \
 ] $PSReset
  set gmac_arp_cache_read_address [ create_bd_port -dir O -from 9 -to 0 gmac_arp_cache_read_address ]
  set gmac_arp_cache_read_data [ create_bd_port -dir I -from 31 -to 0 gmac_arp_cache_read_data ]
  set gmac_arp_cache_read_enable [ create_bd_port -dir O gmac_arp_cache_read_enable ]
  set gmac_arp_cache_write_address [ create_bd_port -dir O -from 9 -to 0 gmac_arp_cache_write_address ]
  set gmac_arp_cache_write_data [ create_bd_port -dir O -from 31 -to 0 gmac_arp_cache_write_data ]
  set gmac_arp_cache_write_enable [ create_bd_port -dir O gmac_arp_cache_write_enable ]
  set gmac_reg_arp_size [ create_bd_port -dir I -from 31 -to 0 gmac_reg_arp_size ]
  set gmac_reg_core_type [ create_bd_port -dir I -from 31 -to 0 gmac_reg_core_type ]
  set gmac_reg_counters_reset [ create_bd_port -dir O -type rst gmac_reg_counters_reset ]
  set gmac_reg_gateway_ip_address [ create_bd_port -dir O -from 31 -to 0 gmac_reg_gateway_ip_address ]
  set gmac_reg_local_ip_address [ create_bd_port -dir O -from 31 -to 0 gmac_reg_local_ip_address ]
  set gmac_reg_mac_address [ create_bd_port -dir O -from 47 -to 0 gmac_reg_mac_address ]
  set gmac_reg_mac_enable [ create_bd_port -dir O gmac_reg_mac_enable ]
  set gmac_reg_mac_promiscous_mode [ create_bd_port -dir O gmac_reg_mac_promiscous_mode ]
  set gmac_reg_multicast_ip_address [ create_bd_port -dir O -from 31 -to 0 gmac_reg_multicast_ip_address ]
  set gmac_reg_multicast_ip_mask [ create_bd_port -dir O -from 31 -to 0 gmac_reg_multicast_ip_mask ]
  set gmac_reg_phy_control_h [ create_bd_port -dir O -from 31 -to 0 gmac_reg_phy_control_h ]
  set gmac_reg_phy_control_l [ create_bd_port -dir O -from 31 -to 0 gmac_reg_phy_control_l ]
  set gmac_reg_phy_status_h [ create_bd_port -dir I -from 31 -to 0 gmac_reg_phy_status_h ]
  set gmac_reg_phy_status_l [ create_bd_port -dir I -from 31 -to 0 gmac_reg_phy_status_l ]
  set gmac_reg_rx_almost_full_count [ create_bd_port -dir I -from 31 -to 0 gmac_reg_rx_almost_full_count ]
  set gmac_reg_rx_bad_packet_count [ create_bd_port -dir I -from 31 -to 0 gmac_reg_rx_bad_packet_count ]
  set gmac_reg_rx_buffer_max_size [ create_bd_port -dir I -from 15 -to 0 gmac_reg_rx_buffer_max_size ]
  set gmac_reg_rx_overflow_count [ create_bd_port -dir I -from 31 -to 0 gmac_reg_rx_overflow_count ]
  set gmac_reg_rx_packet_count [ create_bd_port -dir I -from 31 -to 0 gmac_reg_rx_packet_count ]
  set gmac_reg_rx_packet_rate [ create_bd_port -dir I -from 31 -to 0 gmac_reg_rx_packet_rate ]
  set gmac_reg_rx_valid_count [ create_bd_port -dir I -from 31 -to 0 gmac_reg_rx_valid_count ]
  set gmac_reg_rx_valid_rate [ create_bd_port -dir I -from 31 -to 0 gmac_reg_rx_valid_rate ]
  set gmac_reg_rx_word_size [ create_bd_port -dir I -from 15 -to 0 gmac_reg_rx_word_size ]
  set gmac_reg_tx_afull_count [ create_bd_port -dir I -from 31 -to 0 gmac_reg_tx_afull_count ]
  set gmac_reg_tx_buffer_max_size [ create_bd_port -dir I -from 15 -to 0 gmac_reg_tx_buffer_max_size ]
  set gmac_reg_tx_overflow_count [ create_bd_port -dir I -from 31 -to 0 gmac_reg_tx_overflow_count ]
  set gmac_reg_tx_packet_count [ create_bd_port -dir I -from 31 -to 0 gmac_reg_tx_packet_count ]
  set gmac_reg_tx_packet_rate [ create_bd_port -dir I -from 31 -to 0 gmac_reg_tx_packet_rate ]
  set gmac_reg_tx_valid_count [ create_bd_port -dir I -from 31 -to 0 gmac_reg_tx_valid_count ]
  set gmac_reg_tx_valid_rate [ create_bd_port -dir I -from 31 -to 0 gmac_reg_tx_valid_rate ]
  set gmac_reg_tx_word_size [ create_bd_port -dir I -from 15 -to 0 gmac_reg_tx_word_size ]
  set gmac_reg_udp_port [ create_bd_port -dir O -from 15 -to 0 gmac_reg_udp_port ]
  set gmac_reg_udp_port_mask [ create_bd_port -dir O -from 15 -to 0 gmac_reg_udp_port_mask ]
  set gmac_rx_data_read_address [ create_bd_port -dir O -from 10 -to 0 gmac_rx_data_read_address ]
  set gmac_rx_data_read_byte_enable [ create_bd_port -dir I -from 1 -to 0 gmac_rx_data_read_byte_enable ]
  set gmac_rx_data_read_data [ create_bd_port -dir I -from 7 -to 0 gmac_rx_data_read_data ]
  set gmac_rx_data_read_enable [ create_bd_port -dir O gmac_rx_data_read_enable ]
  set gmac_rx_data_write_address [ create_bd_port -dir O -from 10 -to 0 gmac_rx_data_write_address ]
  set gmac_rx_data_write_byte_enable [ create_bd_port -dir O -from 1 -to 0 gmac_rx_data_write_byte_enable ]
  set gmac_rx_data_write_data [ create_bd_port -dir O -from 7 -to 0 gmac_rx_data_write_data ]
  set gmac_rx_data_write_enable [ create_bd_port -dir O gmac_rx_data_write_enable ]
  set gmac_rx_ringbuffer_number_slots_filled [ create_bd_port -dir I -from 3 -to 0 gmac_rx_ringbuffer_number_slots_filled ]
  set gmac_rx_ringbuffer_slot_clear [ create_bd_port -dir O gmac_rx_ringbuffer_slot_clear ]
  set gmac_rx_ringbuffer_slot_id [ create_bd_port -dir O -from 3 -to 0 gmac_rx_ringbuffer_slot_id ]
  set gmac_rx_ringbuffer_slot_status [ create_bd_port -dir I gmac_rx_ringbuffer_slot_status ]
  set gmac_tx_data_read_address [ create_bd_port -dir O -from 10 -to 0 gmac_tx_data_read_address ]
  set gmac_tx_data_read_byte_enable [ create_bd_port -dir I -from 1 -to 0 gmac_tx_data_read_byte_enable ]
  set gmac_tx_data_read_data [ create_bd_port -dir I -from 7 -to 0 gmac_tx_data_read_data ]
  set gmac_tx_data_read_enable [ create_bd_port -dir O gmac_tx_data_read_enable ]
  set gmac_tx_data_write_address [ create_bd_port -dir O -from 10 -to 0 gmac_tx_data_write_address ]
  set gmac_tx_data_write_byte_enable [ create_bd_port -dir O -from 1 -to 0 gmac_tx_data_write_byte_enable ]
  set gmac_tx_data_write_data [ create_bd_port -dir O -from 7 -to 0 gmac_tx_data_write_data ]
  set gmac_tx_data_write_enable [ create_bd_port -dir O gmac_tx_data_write_enable ]
  set gmac_tx_ringbuffer_number_slots_filled [ create_bd_port -dir I -from 3 -to 0 gmac_tx_ringbuffer_number_slots_filled ]
  set gmac_tx_ringbuffer_slot_id [ create_bd_port -dir O -from 3 -to 0 gmac_tx_ringbuffer_slot_id ]
  set gmac_tx_ringbuffer_slot_set [ create_bd_port -dir O gmac_tx_ringbuffer_slot_set ]
  set gmac_tx_ringbuffer_slot_status [ create_bd_port -dir I gmac_tx_ringbuffer_slot_status ]

  # Create instance: axi_timebase_wdt_0, and set properties
  set axi_timebase_wdt_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_timebase_wdt:3.0 axi_timebase_wdt_0 ]

  # Create instance: axi_timer_0, and set properties
  set axi_timer_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_timer:2.0 axi_timer_0 ]

  # Create instance: axi_uartlite_0, and set properties
  set axi_uartlite_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_uartlite:2.0 axi_uartlite_0 ]
  set_property -dict [ list \
   CONFIG.C_S_AXI_ACLK_FREQ_HZ {125000000} \
   CONFIG.UARTLITE_BOARD_INTERFACE {rs232_uart} \
   CONFIG.USE_BOARD_FLOW {true} \
 ] $axi_uartlite_0

  # Create instance: ethernetcore_mm_0, and set properties
  set ethernetcore_mm_0 [ create_bd_cell -type ip -vlnv kutleng.co.za:kutleng:ethernetcore_mm:1.0 ethernetcore_mm_0 ]
  set_property -dict [ list \
   CONFIG.C_S01_AXI_ADDR_WIDTH {15} \
   CONFIG.C_S02_AXI_ADDR_WIDTH {15} \
   CONFIG.C_S03_AXI_ADDR_WIDTH {15} \
 ] $ethernetcore_mm_0

  # Create instance: mdm_0, and set properties
  set mdm_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:mdm:3.2 mdm_0 ]
  set_property -dict [ list \
   CONFIG.C_DBG_MEM_ACCESS {1} \
   CONFIG.C_DBG_REG_ACCESS {1} \
   CONFIG.C_S_AXI_ADDR_WIDTH {5} \
   CONFIG.C_USE_UART {1} \
 ] $mdm_0

  # Create instance: microblaze_0, and set properties
  set microblaze_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:microblaze:11.0 microblaze_0 ]
  set_property -dict [ list \
   CONFIG.C_ADDR_TAG_BITS {0} \
   CONFIG.C_AREA_OPTIMIZED {1} \
   CONFIG.C_CACHE_BYTE_SIZE {8192} \
   CONFIG.C_DCACHE_ADDR_TAG {0} \
   CONFIG.C_DCACHE_ALWAYS_USED {1} \
   CONFIG.C_DCACHE_BYTE_SIZE {8192} \
   CONFIG.C_DCACHE_USE_WRITEBACK {0} \
   CONFIG.C_DEBUG_ENABLED {2} \
   CONFIG.C_DIV_ZERO_EXCEPTION {0} \
   CONFIG.C_D_AXI {1} \
   CONFIG.C_D_LMB {1} \
   CONFIG.C_FPU_EXCEPTION {0} \
   CONFIG.C_ICACHE_ALWAYS_USED {1} \
   CONFIG.C_ICACHE_LINE_LEN {8} \
   CONFIG.C_ICACHE_STREAMS {0} \
   CONFIG.C_ICACHE_VICTIMS {0} \
   CONFIG.C_ILL_OPCODE_EXCEPTION {0} \
   CONFIG.C_I_LMB {1} \
   CONFIG.C_MMU_DTLB_SIZE {4} \
   CONFIG.C_MMU_ITLB_SIZE {2} \
   CONFIG.C_MMU_ZONES {2} \
   CONFIG.C_M_AXI_D_BUS_EXCEPTION {1} \
   CONFIG.C_M_AXI_I_BUS_EXCEPTION {0} \
   CONFIG.C_NUMBER_OF_PC_BRK {2} \
   CONFIG.C_NUMBER_OF_RD_ADDR_BRK {2} \
   CONFIG.C_NUMBER_OF_WR_ADDR_BRK {2} \
   CONFIG.C_OPCODE_0x0_ILLEGAL {0} \
   CONFIG.C_PVR {0} \
   CONFIG.C_UNALIGNED_EXCEPTIONS {0} \
   CONFIG.C_USE_BARREL {1} \
   CONFIG.C_USE_DCACHE {0} \
   CONFIG.C_USE_DIV {0} \
   CONFIG.C_USE_FPU {0} \
   CONFIG.C_USE_HW_MUL {1} \
   CONFIG.C_USE_ICACHE {0} \
   CONFIG.C_USE_MMU {0} \
   CONFIG.C_USE_MSR_INSTR {1} \
   CONFIG.C_USE_PCMP_INSTR {1} \
   CONFIG.C_USE_REORDER_INSTR {1} \
   CONFIG.C_USE_STACK_PROTECTION {1} \
   CONFIG.G_TEMPLATE_LIST {6} \
   CONFIG.G_USE_EXCEPTIONS {1} \
 ] $microblaze_0

  # Create instance: microblaze_0_axi_intc, and set properties
  set microblaze_0_axi_intc [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_intc:4.1 microblaze_0_axi_intc ]
  set_property -dict [ list \
   CONFIG.C_HAS_FAST {1} \
 ] $microblaze_0_axi_intc

  # Create instance: microblaze_0_axi_periph, and set properties
  set microblaze_0_axi_periph [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 microblaze_0_axi_periph ]
  set_property -dict [ list \
   CONFIG.NUM_MI {10} \
   CONFIG.NUM_SI {2} \
 ] $microblaze_0_axi_periph

  # Create instance: microblaze_0_local_memory
  create_hier_cell_microblaze_0_local_memory [current_bd_instance .] microblaze_0_local_memory

  # Create instance: microblaze_0_xlconcat, and set properties
  set microblaze_0_xlconcat [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 microblaze_0_xlconcat ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {6} \
 ] $microblaze_0_xlconcat

  # Create instance: proc_sys_reset_0, and set properties
  set proc_sys_reset_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 proc_sys_reset_0 ]
  set_property -dict [ list \
   CONFIG.RESET_BOARD_INTERFACE {reset} \
   CONFIG.USE_BOARD_FLOW {true} \
 ] $proc_sys_reset_0

  # Create interface connections
  connect_bd_intf_net -intf_net axi_uartlite_0_UART [get_bd_intf_ports rs232_uart] [get_bd_intf_pins axi_uartlite_0/UART]
  connect_bd_intf_net -intf_net mdm_0_M_AXI [get_bd_intf_pins mdm_0/M_AXI] [get_bd_intf_pins microblaze_0_axi_periph/S01_AXI]
  connect_bd_intf_net -intf_net microblaze_0_axi_dp [get_bd_intf_pins microblaze_0/M_AXI_DP] [get_bd_intf_pins microblaze_0_axi_periph/S00_AXI]
  connect_bd_intf_net -intf_net microblaze_0_axi_periph_M02_AXI [get_bd_intf_pins axi_timebase_wdt_0/S_AXI] [get_bd_intf_pins microblaze_0_axi_periph/M02_AXI]
  connect_bd_intf_net -intf_net microblaze_0_axi_periph_M03_AXI [get_bd_intf_pins axi_timer_0/S_AXI] [get_bd_intf_pins microblaze_0_axi_periph/M03_AXI]
  connect_bd_intf_net -intf_net microblaze_0_axi_periph_M04_AXI [get_bd_intf_pins axi_uartlite_0/S_AXI] [get_bd_intf_pins microblaze_0_axi_periph/M04_AXI]
  connect_bd_intf_net -intf_net microblaze_0_axi_periph_M05_AXI [get_bd_intf_pins ethernetcore_mm_0/S00_AXI] [get_bd_intf_pins microblaze_0_axi_periph/M05_AXI]
  connect_bd_intf_net -intf_net microblaze_0_axi_periph_M06_AXI [get_bd_intf_pins ethernetcore_mm_0/S01_AXI] [get_bd_intf_pins microblaze_0_axi_periph/M06_AXI]
  connect_bd_intf_net -intf_net microblaze_0_axi_periph_M07_AXI [get_bd_intf_pins ethernetcore_mm_0/S02_AXI] [get_bd_intf_pins microblaze_0_axi_periph/M07_AXI]
  connect_bd_intf_net -intf_net microblaze_0_axi_periph_M08_AXI [get_bd_intf_pins ethernetcore_mm_0/S03_AXI] [get_bd_intf_pins microblaze_0_axi_periph/M08_AXI]
  connect_bd_intf_net -intf_net microblaze_0_axi_periph_M09_AXI [get_bd_intf_pins ethernetcore_mm_0/S_AXI_INTR] [get_bd_intf_pins microblaze_0_axi_periph/M09_AXI]
  connect_bd_intf_net -intf_net microblaze_0_debug [get_bd_intf_pins mdm_0/MBDEBUG_0] [get_bd_intf_pins microblaze_0/DEBUG]
  connect_bd_intf_net -intf_net microblaze_0_dlmb_1 [get_bd_intf_pins microblaze_0/DLMB] [get_bd_intf_pins microblaze_0_local_memory/DLMB]
  connect_bd_intf_net -intf_net microblaze_0_ilmb_1 [get_bd_intf_pins microblaze_0/ILMB] [get_bd_intf_pins microblaze_0_local_memory/ILMB]
  connect_bd_intf_net -intf_net microblaze_0_intc_axi [get_bd_intf_pins microblaze_0_axi_intc/s_axi] [get_bd_intf_pins microblaze_0_axi_periph/M00_AXI]
  connect_bd_intf_net -intf_net microblaze_0_interrupt [get_bd_intf_pins microblaze_0/INTERRUPT] [get_bd_intf_pins microblaze_0_axi_intc/interrupt]
  connect_bd_intf_net -intf_net microblaze_0_mdm_axi [get_bd_intf_pins mdm_0/S_AXI] [get_bd_intf_pins microblaze_0_axi_periph/M01_AXI]

  # Create port connections
  connect_bd_net -net ARESETN_1 [get_bd_pins microblaze_0_axi_periph/ARESETN] [get_bd_pins proc_sys_reset_0/interconnect_aresetn]
  connect_bd_net -net ClockStable_1 [get_bd_ports ClockStable] [get_bd_pins proc_sys_reset_0/dcm_locked]
  connect_bd_net -net PSReset_1 [get_bd_ports PSReset] [get_bd_pins proc_sys_reset_0/ext_reset_in]
  connect_bd_net -net SYS_Rst_1 [get_bd_pins microblaze_0_local_memory/SYS_Rst] [get_bd_pins proc_sys_reset_0/bus_struct_reset]
  connect_bd_net -net axi_timebase_wdt_0_timebase_interrupt [get_bd_pins axi_timebase_wdt_0/timebase_interrupt] [get_bd_pins microblaze_0_xlconcat/In1]
  connect_bd_net -net axi_timebase_wdt_0_wdt_interrupt [get_bd_pins axi_timebase_wdt_0/wdt_interrupt] [get_bd_pins microblaze_0_xlconcat/In2]
  connect_bd_net -net axi_timer_0_interrupt [get_bd_pins axi_timer_0/interrupt] [get_bd_pins microblaze_0_xlconcat/In3]
  connect_bd_net -net axi_uartlite_0_interrupt [get_bd_pins axi_uartlite_0/interrupt] [get_bd_pins microblaze_0_xlconcat/In0]
  connect_bd_net -net ethernetcore_mm_0_gmac_arp_cache_read_address [get_bd_ports gmac_arp_cache_read_address] [get_bd_pins ethernetcore_mm_0/gmac_arp_cache_read_address]
  connect_bd_net -net ethernetcore_mm_0_gmac_arp_cache_read_enable [get_bd_ports gmac_arp_cache_read_enable] [get_bd_pins ethernetcore_mm_0/gmac_arp_cache_read_enable]
  connect_bd_net -net ethernetcore_mm_0_gmac_arp_cache_write_address [get_bd_ports gmac_arp_cache_write_address] [get_bd_pins ethernetcore_mm_0/gmac_arp_cache_write_address]
  connect_bd_net -net ethernetcore_mm_0_gmac_arp_cache_write_data [get_bd_ports gmac_arp_cache_write_data] [get_bd_pins ethernetcore_mm_0/gmac_arp_cache_write_data]
  connect_bd_net -net ethernetcore_mm_0_gmac_arp_cache_write_enable [get_bd_ports gmac_arp_cache_write_enable] [get_bd_pins ethernetcore_mm_0/gmac_arp_cache_write_enable]
  connect_bd_net -net ethernetcore_mm_0_gmac_reg_counters_reset [get_bd_ports gmac_reg_counters_reset] [get_bd_pins ethernetcore_mm_0/gmac_reg_counters_reset]
  connect_bd_net -net ethernetcore_mm_0_gmac_reg_gateway_ip_address [get_bd_ports gmac_reg_gateway_ip_address] [get_bd_pins ethernetcore_mm_0/gmac_reg_gateway_ip_address]
  connect_bd_net -net ethernetcore_mm_0_gmac_reg_local_ip_address [get_bd_ports gmac_reg_local_ip_address] [get_bd_pins ethernetcore_mm_0/gmac_reg_local_ip_address]
  connect_bd_net -net ethernetcore_mm_0_gmac_reg_mac_address [get_bd_ports gmac_reg_mac_address] [get_bd_pins ethernetcore_mm_0/gmac_reg_mac_address]
  connect_bd_net -net ethernetcore_mm_0_gmac_reg_mac_enable [get_bd_ports gmac_reg_mac_enable] [get_bd_pins ethernetcore_mm_0/gmac_reg_mac_enable]
  connect_bd_net -net ethernetcore_mm_0_gmac_reg_mac_promiscous_mode [get_bd_ports gmac_reg_mac_promiscous_mode] [get_bd_pins ethernetcore_mm_0/gmac_reg_mac_promiscous_mode]
  connect_bd_net -net ethernetcore_mm_0_gmac_reg_multicast_ip_address [get_bd_ports gmac_reg_multicast_ip_address] [get_bd_pins ethernetcore_mm_0/gmac_reg_multicast_ip_address]
  connect_bd_net -net ethernetcore_mm_0_gmac_reg_multicast_ip_mask [get_bd_ports gmac_reg_multicast_ip_mask] [get_bd_pins ethernetcore_mm_0/gmac_reg_multicast_ip_mask]
  connect_bd_net -net ethernetcore_mm_0_gmac_reg_phy_control_h [get_bd_ports gmac_reg_phy_control_h] [get_bd_pins ethernetcore_mm_0/gmac_reg_phy_control_h]
  connect_bd_net -net ethernetcore_mm_0_gmac_reg_phy_control_l [get_bd_ports gmac_reg_phy_control_l] [get_bd_pins ethernetcore_mm_0/gmac_reg_phy_control_l]
  connect_bd_net -net ethernetcore_mm_0_gmac_reg_udp_port [get_bd_ports gmac_reg_udp_port] [get_bd_pins ethernetcore_mm_0/gmac_reg_udp_port]
  connect_bd_net -net ethernetcore_mm_0_gmac_reg_udp_port_mask [get_bd_ports gmac_reg_udp_port_mask] [get_bd_pins ethernetcore_mm_0/gmac_reg_udp_port_mask]
  connect_bd_net -net ethernetcore_mm_0_gmac_rx_data_read_address [get_bd_ports gmac_rx_data_read_address] [get_bd_pins ethernetcore_mm_0/gmac_rx_data_read_address]
  connect_bd_net -net ethernetcore_mm_0_gmac_rx_data_read_enable [get_bd_ports gmac_rx_data_read_enable] [get_bd_pins ethernetcore_mm_0/gmac_rx_data_read_enable]
  connect_bd_net -net ethernetcore_mm_0_gmac_rx_data_write_address [get_bd_ports gmac_rx_data_write_address] [get_bd_pins ethernetcore_mm_0/gmac_rx_data_write_address]
  connect_bd_net -net ethernetcore_mm_0_gmac_rx_data_write_byte_enable [get_bd_ports gmac_rx_data_write_byte_enable] [get_bd_pins ethernetcore_mm_0/gmac_rx_data_write_byte_enable]
  connect_bd_net -net ethernetcore_mm_0_gmac_rx_data_write_data [get_bd_ports gmac_rx_data_write_data] [get_bd_pins ethernetcore_mm_0/gmac_rx_data_write_data]
  connect_bd_net -net ethernetcore_mm_0_gmac_rx_data_write_enable [get_bd_ports gmac_rx_data_write_enable] [get_bd_pins ethernetcore_mm_0/gmac_rx_data_write_enable]
  connect_bd_net -net ethernetcore_mm_0_gmac_rx_ringbuffer_slot_clear [get_bd_ports gmac_rx_ringbuffer_slot_clear] [get_bd_pins ethernetcore_mm_0/gmac_rx_ringbuffer_slot_clear]
  connect_bd_net -net ethernetcore_mm_0_gmac_rx_ringbuffer_slot_id [get_bd_ports gmac_rx_ringbuffer_slot_id] [get_bd_pins ethernetcore_mm_0/gmac_rx_ringbuffer_slot_id]
  connect_bd_net -net ethernetcore_mm_0_gmac_tx_data_read_address [get_bd_ports gmac_tx_data_read_address] [get_bd_pins ethernetcore_mm_0/gmac_tx_data_read_address]
  connect_bd_net -net ethernetcore_mm_0_gmac_tx_data_read_enable [get_bd_ports gmac_tx_data_read_enable] [get_bd_pins ethernetcore_mm_0/gmac_tx_data_read_enable]
  connect_bd_net -net ethernetcore_mm_0_gmac_tx_data_write_address [get_bd_ports gmac_tx_data_write_address] [get_bd_pins ethernetcore_mm_0/gmac_tx_data_write_address]
  connect_bd_net -net ethernetcore_mm_0_gmac_tx_data_write_byte_enable [get_bd_ports gmac_tx_data_write_byte_enable] [get_bd_pins ethernetcore_mm_0/gmac_tx_data_write_byte_enable]
  connect_bd_net -net ethernetcore_mm_0_gmac_tx_data_write_data [get_bd_ports gmac_tx_data_write_data] [get_bd_pins ethernetcore_mm_0/gmac_tx_data_write_data]
  connect_bd_net -net ethernetcore_mm_0_gmac_tx_data_write_enable [get_bd_ports gmac_tx_data_write_enable] [get_bd_pins ethernetcore_mm_0/gmac_tx_data_write_enable]
  connect_bd_net -net ethernetcore_mm_0_gmac_tx_ringbuffer_slot_id [get_bd_ports gmac_tx_ringbuffer_slot_id] [get_bd_pins ethernetcore_mm_0/gmac_tx_ringbuffer_slot_id]
  connect_bd_net -net ethernetcore_mm_0_gmac_tx_ringbuffer_slot_set [get_bd_ports gmac_tx_ringbuffer_slot_set] [get_bd_pins ethernetcore_mm_0/gmac_tx_ringbuffer_slot_set]
  connect_bd_net -net ethernetcore_mm_0_irq [get_bd_pins ethernetcore_mm_0/irq] [get_bd_pins microblaze_0_xlconcat/In5]
  connect_bd_net -net gmac_arp_cache_read_data_0_1 [get_bd_ports gmac_arp_cache_read_data] [get_bd_pins ethernetcore_mm_0/gmac_arp_cache_read_data]
  connect_bd_net -net gmac_reg_arp_size_0_1 [get_bd_ports gmac_reg_arp_size] [get_bd_pins ethernetcore_mm_0/gmac_reg_arp_size]
  connect_bd_net -net gmac_reg_core_type_0_1 [get_bd_ports gmac_reg_core_type] [get_bd_pins ethernetcore_mm_0/gmac_reg_core_type]
  connect_bd_net -net gmac_reg_phy_status_h_0_1 [get_bd_ports gmac_reg_phy_status_h] [get_bd_pins ethernetcore_mm_0/gmac_reg_phy_status_h]
  connect_bd_net -net gmac_reg_phy_status_l_0_1 [get_bd_ports gmac_reg_phy_status_l] [get_bd_pins ethernetcore_mm_0/gmac_reg_phy_status_l]
  connect_bd_net -net gmac_reg_rx_almost_full_count_0_1 [get_bd_ports gmac_reg_rx_almost_full_count] [get_bd_pins ethernetcore_mm_0/gmac_reg_rx_almost_full_count]
  connect_bd_net -net gmac_reg_rx_bad_packet_count_0_1 [get_bd_ports gmac_reg_rx_bad_packet_count] [get_bd_pins ethernetcore_mm_0/gmac_reg_rx_bad_packet_count]
  connect_bd_net -net gmac_reg_rx_buffer_max_size_0_1 [get_bd_ports gmac_reg_rx_buffer_max_size] [get_bd_pins ethernetcore_mm_0/gmac_reg_rx_buffer_max_size]
  connect_bd_net -net gmac_reg_rx_overflow_count_0_1 [get_bd_ports gmac_reg_rx_overflow_count] [get_bd_pins ethernetcore_mm_0/gmac_reg_rx_overflow_count]
  connect_bd_net -net gmac_reg_rx_packet_count_0_1 [get_bd_ports gmac_reg_rx_packet_count] [get_bd_pins ethernetcore_mm_0/gmac_reg_rx_packet_count]
  connect_bd_net -net gmac_reg_rx_packet_rate_0_1 [get_bd_ports gmac_reg_rx_packet_rate] [get_bd_pins ethernetcore_mm_0/gmac_reg_rx_packet_rate]
  connect_bd_net -net gmac_reg_rx_valid_count_0_1 [get_bd_ports gmac_reg_rx_valid_count] [get_bd_pins ethernetcore_mm_0/gmac_reg_rx_valid_count]
  connect_bd_net -net gmac_reg_rx_valid_rate_0_1 [get_bd_ports gmac_reg_rx_valid_rate] [get_bd_pins ethernetcore_mm_0/gmac_reg_rx_valid_rate]
  connect_bd_net -net gmac_reg_rx_word_size_0_1 [get_bd_ports gmac_reg_rx_word_size] [get_bd_pins ethernetcore_mm_0/gmac_reg_rx_word_size]
  connect_bd_net -net gmac_reg_tx_afull_count_0_1 [get_bd_ports gmac_reg_tx_afull_count] [get_bd_pins ethernetcore_mm_0/gmac_reg_tx_afull_count]
  connect_bd_net -net gmac_reg_tx_buffer_max_size_0_1 [get_bd_ports gmac_reg_tx_buffer_max_size] [get_bd_pins ethernetcore_mm_0/gmac_reg_tx_buffer_max_size]
  connect_bd_net -net gmac_reg_tx_overflow_count_0_1 [get_bd_ports gmac_reg_tx_overflow_count] [get_bd_pins ethernetcore_mm_0/gmac_reg_tx_overflow_count]
  connect_bd_net -net gmac_reg_tx_packet_count_0_1 [get_bd_ports gmac_reg_tx_packet_count] [get_bd_pins ethernetcore_mm_0/gmac_reg_tx_packet_count]
  connect_bd_net -net gmac_reg_tx_packet_rate_0_1 [get_bd_ports gmac_reg_tx_packet_rate] [get_bd_pins ethernetcore_mm_0/gmac_reg_tx_packet_rate]
  connect_bd_net -net gmac_reg_tx_valid_count_0_1 [get_bd_ports gmac_reg_tx_valid_count] [get_bd_pins ethernetcore_mm_0/gmac_reg_tx_valid_count]
  connect_bd_net -net gmac_reg_tx_valid_rate_0_1 [get_bd_ports gmac_reg_tx_valid_rate] [get_bd_pins ethernetcore_mm_0/gmac_reg_tx_valid_rate]
  connect_bd_net -net gmac_reg_tx_word_size_0_1 [get_bd_ports gmac_reg_tx_word_size] [get_bd_pins ethernetcore_mm_0/gmac_reg_tx_word_size]
  connect_bd_net -net gmac_rx_data_read_byte_enable_0_1 [get_bd_ports gmac_rx_data_read_byte_enable] [get_bd_pins ethernetcore_mm_0/gmac_rx_data_read_byte_enable]
  connect_bd_net -net gmac_rx_data_read_data_0_1 [get_bd_ports gmac_rx_data_read_data] [get_bd_pins ethernetcore_mm_0/gmac_rx_data_read_data]
  connect_bd_net -net gmac_rx_ringbuffer_number_slots_filled_0_1 [get_bd_ports gmac_rx_ringbuffer_number_slots_filled] [get_bd_pins ethernetcore_mm_0/gmac_rx_ringbuffer_number_slots_filled]
  connect_bd_net -net gmac_rx_ringbuffer_slot_status_0_1 [get_bd_ports gmac_rx_ringbuffer_slot_status] [get_bd_pins ethernetcore_mm_0/gmac_rx_ringbuffer_slot_status]
  connect_bd_net -net gmac_tx_data_read_byte_enable_0_1 [get_bd_ports gmac_tx_data_read_byte_enable] [get_bd_pins ethernetcore_mm_0/gmac_tx_data_read_byte_enable]
  connect_bd_net -net gmac_tx_data_read_data_0_1 [get_bd_ports gmac_tx_data_read_data] [get_bd_pins ethernetcore_mm_0/gmac_tx_data_read_data]
  connect_bd_net -net gmac_tx_ringbuffer_number_slots_filled_0_1 [get_bd_ports gmac_tx_ringbuffer_number_slots_filled] [get_bd_pins ethernetcore_mm_0/gmac_tx_ringbuffer_number_slots_filled]
  connect_bd_net -net gmac_tx_ringbuffer_slot_status_0_1 [get_bd_ports gmac_tx_ringbuffer_slot_status] [get_bd_pins ethernetcore_mm_0/gmac_tx_ringbuffer_slot_status]
  connect_bd_net -net mdm_0_Debug_SYS_Rst [get_bd_pins mdm_0/Debug_SYS_Rst] [get_bd_pins proc_sys_reset_0/mb_debug_sys_rst]
  connect_bd_net -net mdm_0_Interrupt [get_bd_pins mdm_0/Interrupt] [get_bd_pins microblaze_0_xlconcat/In4]
  connect_bd_net -net microblaze_0_Clk [get_bd_ports PSClock] [get_bd_pins axi_timebase_wdt_0/s_axi_aclk] [get_bd_pins axi_timer_0/s_axi_aclk] [get_bd_pins axi_uartlite_0/s_axi_aclk] [get_bd_pins ethernetcore_mm_0/s00_axi_aclk] [get_bd_pins ethernetcore_mm_0/s01_axi_aclk] [get_bd_pins ethernetcore_mm_0/s02_axi_aclk] [get_bd_pins ethernetcore_mm_0/s03_axi_aclk] [get_bd_pins ethernetcore_mm_0/s_axi_intr_aclk] [get_bd_pins mdm_0/M_AXI_ACLK] [get_bd_pins mdm_0/S_AXI_ACLK] [get_bd_pins microblaze_0/Clk] [get_bd_pins microblaze_0_axi_intc/processor_clk] [get_bd_pins microblaze_0_axi_intc/s_axi_aclk] [get_bd_pins microblaze_0_axi_periph/ACLK] [get_bd_pins microblaze_0_axi_periph/M00_ACLK] [get_bd_pins microblaze_0_axi_periph/M01_ACLK] [get_bd_pins microblaze_0_axi_periph/M02_ACLK] [get_bd_pins microblaze_0_axi_periph/M03_ACLK] [get_bd_pins microblaze_0_axi_periph/M04_ACLK] [get_bd_pins microblaze_0_axi_periph/M05_ACLK] [get_bd_pins microblaze_0_axi_periph/M06_ACLK] [get_bd_pins microblaze_0_axi_periph/M07_ACLK] [get_bd_pins microblaze_0_axi_periph/M08_ACLK] [get_bd_pins microblaze_0_axi_periph/M09_ACLK] [get_bd_pins microblaze_0_axi_periph/S00_ACLK] [get_bd_pins microblaze_0_axi_periph/S01_ACLK] [get_bd_pins microblaze_0_local_memory/LMB_Clk] [get_bd_pins proc_sys_reset_0/slowest_sync_clk]
  connect_bd_net -net microblaze_0_intr [get_bd_pins microblaze_0_axi_intc/intr] [get_bd_pins microblaze_0_xlconcat/dout]
  connect_bd_net -net proc_sys_reset_0_mb_reset [get_bd_pins microblaze_0/Reset] [get_bd_pins microblaze_0_axi_intc/processor_rst] [get_bd_pins proc_sys_reset_0/mb_reset]
  connect_bd_net -net proc_sys_reset_0_peripheral_aresetn [get_bd_pins axi_timebase_wdt_0/s_axi_aresetn] [get_bd_pins axi_timer_0/s_axi_aresetn] [get_bd_pins axi_uartlite_0/s_axi_aresetn] [get_bd_pins ethernetcore_mm_0/s00_axi_aresetn] [get_bd_pins ethernetcore_mm_0/s01_axi_aresetn] [get_bd_pins ethernetcore_mm_0/s02_axi_aresetn] [get_bd_pins ethernetcore_mm_0/s03_axi_aresetn] [get_bd_pins ethernetcore_mm_0/s_axi_intr_aresetn] [get_bd_pins mdm_0/M_AXI_ARESETN] [get_bd_pins mdm_0/S_AXI_ARESETN] [get_bd_pins microblaze_0_axi_intc/s_axi_aresetn] [get_bd_pins microblaze_0_axi_periph/M00_ARESETN] [get_bd_pins microblaze_0_axi_periph/M01_ARESETN] [get_bd_pins microblaze_0_axi_periph/M02_ARESETN] [get_bd_pins microblaze_0_axi_periph/M03_ARESETN] [get_bd_pins microblaze_0_axi_periph/M04_ARESETN] [get_bd_pins microblaze_0_axi_periph/M05_ARESETN] [get_bd_pins microblaze_0_axi_periph/M06_ARESETN] [get_bd_pins microblaze_0_axi_periph/M07_ARESETN] [get_bd_pins microblaze_0_axi_periph/M08_ARESETN] [get_bd_pins microblaze_0_axi_periph/M09_ARESETN] [get_bd_pins microblaze_0_axi_periph/S00_ARESETN] [get_bd_pins microblaze_0_axi_periph/S01_ARESETN] [get_bd_pins proc_sys_reset_0/peripheral_aresetn]

  # Create address segments
  assign_bd_address -offset 0x41A00000 -range 0x00010000 -target_address_space [get_bd_addr_spaces mdm_0/Data] [get_bd_addr_segs axi_timebase_wdt_0/S_AXI/Reg] -force
  assign_bd_address -offset 0x41C00000 -range 0x00010000 -target_address_space [get_bd_addr_spaces mdm_0/Data] [get_bd_addr_segs axi_timer_0/S_AXI/Reg] -force
  assign_bd_address -offset 0x40600000 -range 0x00010000 -target_address_space [get_bd_addr_spaces mdm_0/Data] [get_bd_addr_segs axi_uartlite_0/S_AXI/Reg] -force
  assign_bd_address -offset 0x44A00000 -range 0x00010000 -target_address_space [get_bd_addr_spaces mdm_0/Data] [get_bd_addr_segs ethernetcore_mm_0/S00_AXI/S00_AXI_reg] -force
  assign_bd_address -offset 0x76000000 -range 0x00010000 -target_address_space [get_bd_addr_spaces mdm_0/Data] [get_bd_addr_segs ethernetcore_mm_0/S01_AXI/S01_AXI_mem] -force
  assign_bd_address -offset 0x76010000 -range 0x00010000 -target_address_space [get_bd_addr_spaces mdm_0/Data] [get_bd_addr_segs ethernetcore_mm_0/S02_AXI/S02_AXI_mem] -force
  assign_bd_address -offset 0x76020000 -range 0x00010000 -target_address_space [get_bd_addr_spaces mdm_0/Data] [get_bd_addr_segs ethernetcore_mm_0/S03_AXI/S03_AXI_mem] -force
  assign_bd_address -offset 0x44A10000 -range 0x00010000 -target_address_space [get_bd_addr_spaces mdm_0/Data] [get_bd_addr_segs ethernetcore_mm_0/S_AXI_INTR/S_AXI_INTR_reg] -force
  assign_bd_address -offset 0x41400000 -range 0x00001000 -target_address_space [get_bd_addr_spaces mdm_0/Data] [get_bd_addr_segs mdm_0/S_AXI/Reg] -force
  assign_bd_address -offset 0x41200000 -range 0x00010000 -target_address_space [get_bd_addr_spaces mdm_0/Data] [get_bd_addr_segs microblaze_0_axi_intc/S_AXI/Reg] -force
  assign_bd_address -offset 0x41A00000 -range 0x00010000 -target_address_space [get_bd_addr_spaces microblaze_0/Data] [get_bd_addr_segs axi_timebase_wdt_0/S_AXI/Reg] -force
  assign_bd_address -offset 0x41C00000 -range 0x00010000 -target_address_space [get_bd_addr_spaces microblaze_0/Data] [get_bd_addr_segs axi_timer_0/S_AXI/Reg] -force
  assign_bd_address -offset 0x40600000 -range 0x00010000 -target_address_space [get_bd_addr_spaces microblaze_0/Data] [get_bd_addr_segs axi_uartlite_0/S_AXI/Reg] -force
  assign_bd_address -offset 0x00000000 -range 0x00010000 -target_address_space [get_bd_addr_spaces microblaze_0/Data] [get_bd_addr_segs microblaze_0_local_memory/dlmb_bram_if_cntlr/SLMB/Mem] -force
  assign_bd_address -offset 0x44A00000 -range 0x00010000 -target_address_space [get_bd_addr_spaces microblaze_0/Data] [get_bd_addr_segs ethernetcore_mm_0/S00_AXI/S00_AXI_reg] -force
  assign_bd_address -offset 0x76000000 -range 0x00010000 -target_address_space [get_bd_addr_spaces microblaze_0/Data] [get_bd_addr_segs ethernetcore_mm_0/S01_AXI/S01_AXI_mem] -force
  assign_bd_address -offset 0x76010000 -range 0x00010000 -target_address_space [get_bd_addr_spaces microblaze_0/Data] [get_bd_addr_segs ethernetcore_mm_0/S02_AXI/S02_AXI_mem] -force
  assign_bd_address -offset 0x76020000 -range 0x00010000 -target_address_space [get_bd_addr_spaces microblaze_0/Data] [get_bd_addr_segs ethernetcore_mm_0/S03_AXI/S03_AXI_mem] -force
  assign_bd_address -offset 0x44A10000 -range 0x00010000 -target_address_space [get_bd_addr_spaces microblaze_0/Data] [get_bd_addr_segs ethernetcore_mm_0/S_AXI_INTR/S_AXI_INTR_reg] -force
  assign_bd_address -offset 0x00000000 -range 0x00010000 -target_address_space [get_bd_addr_spaces microblaze_0/Instruction] [get_bd_addr_segs microblaze_0_local_memory/ilmb_bram_if_cntlr/SLMB/Mem] -force
  assign_bd_address -offset 0x41400000 -range 0x00001000 -target_address_space [get_bd_addr_spaces microblaze_0/Data] [get_bd_addr_segs mdm_0/S_AXI/Reg] -force
  assign_bd_address -offset 0x41200000 -range 0x00010000 -target_address_space [get_bd_addr_spaces microblaze_0/Data] [get_bd_addr_segs microblaze_0_axi_intc/S_AXI/Reg] -force

  # Perform GUI Layout
  regenerate_bd_layout -layout_string {
   "ActiveEmotionalView":"Default View",
   "Default View_ScaleFactor":"0.277259",
   "Default View_TopLeft":"-429,-87",
   "ExpandedHierarchyInLayout":"",
   "guistr":"# # String gsaved with Nlview 7.0.21  2019-05-29 bk=1.5064 VDI=41 GEI=36 GUI=JA:9.0 TLS
#  -string -flagsOSRD
preplace port rs232_uart -pg 1 -lvl 6 -x 3100 -y 690 -defaultsOSRD
preplace port ClockStable -pg 1 -lvl 0 -x -60 -y 220 -defaultsOSRD
preplace port PSClock -pg 1 -lvl 0 -x -60 -y 80 -defaultsOSRD
preplace port PSReset -pg 1 -lvl 0 -x -60 -y 160 -defaultsOSRD
preplace port gmac_reg_mac_promiscous_mode -pg 1 -lvl 6 -x 3100 -y 1150 -defaultsOSRD
preplace port gmac_arp_cache_write_enable -pg 1 -lvl 6 -x 3100 -y 1190 -defaultsOSRD
preplace port gmac_reg_counters_reset -pg 1 -lvl 6 -x 3100 -y 1170 -defaultsOSRD
preplace port gmac_reg_mac_enable -pg 1 -lvl 6 -x 3100 -y 1130 -defaultsOSRD
preplace port gmac_arp_cache_read_enable -pg 1 -lvl 6 -x 3100 -y 1210 -defaultsOSRD
preplace port gmac_tx_data_write_enable -pg 1 -lvl 6 -x 3100 -y 1290 -defaultsOSRD
preplace port gmac_tx_data_read_enable -pg 1 -lvl 6 -x 3100 -y 1310 -defaultsOSRD
preplace port gmac_rx_data_write_enable -pg 1 -lvl 6 -x 3100 -y 1450 -defaultsOSRD
preplace port gmac_tx_ringbuffer_slot_set -pg 1 -lvl 6 -x 3100 -y 1430 -defaultsOSRD
preplace port gmac_rx_data_read_enable -pg 1 -lvl 6 -x 3100 -y 1470 -defaultsOSRD
preplace port gmac_rx_ringbuffer_slot_clear -pg 1 -lvl 6 -x 3100 -y 1590 -defaultsOSRD
preplace port gmac_rx_ringbuffer_slot_status -pg 1 -lvl 0 -x -60 -y 1500 -defaultsOSRD
preplace port gmac_tx_ringbuffer_slot_status -pg 1 -lvl 0 -x -60 -y 1420 -defaultsOSRD
preplace portBus gmac_reg_phy_control_l -pg 1 -lvl 6 -x 3100 -y 970 -defaultsOSRD
preplace portBus gmac_reg_mac_address -pg 1 -lvl 6 -x 3100 -y 990 -defaultsOSRD
preplace portBus gmac_reg_local_ip_address -pg 1 -lvl 6 -x 3100 -y 1010 -defaultsOSRD
preplace portBus gmac_reg_phy_control_h -pg 1 -lvl 6 -x 3100 -y 950 -defaultsOSRD
preplace portBus gmac_reg_gateway_ip_address -pg 1 -lvl 6 -x 3100 -y 1030 -defaultsOSRD
preplace portBus gmac_reg_multicast_ip_address -pg 1 -lvl 6 -x 3100 -y 1050 -defaultsOSRD
preplace portBus gmac_reg_multicast_ip_mask -pg 1 -lvl 6 -x 3100 -y 1070 -defaultsOSRD
preplace portBus gmac_reg_udp_port -pg 1 -lvl 6 -x 3100 -y 1090 -defaultsOSRD
preplace portBus gmac_reg_udp_port_mask -pg 1 -lvl 6 -x 3100 -y 1110 -defaultsOSRD
preplace portBus gmac_arp_cache_write_data -pg 1 -lvl 6 -x 3100 -y 1230 -defaultsOSRD
preplace portBus gmac_arp_cache_write_address -pg 1 -lvl 6 -x 3100 -y 1250 -defaultsOSRD
preplace portBus gmac_tx_data_write_data -pg 1 -lvl 6 -x 3100 -y 1330 -defaultsOSRD
preplace portBus gmac_arp_cache_read_address -pg 1 -lvl 6 -x 3100 -y 1270 -defaultsOSRD
preplace portBus gmac_tx_data_write_byte_enable -pg 1 -lvl 6 -x 3100 -y 1350 -defaultsOSRD
preplace portBus gmac_tx_data_write_address -pg 1 -lvl 6 -x 3100 -y 1370 -defaultsOSRD
preplace portBus gmac_tx_data_read_address -pg 1 -lvl 6 -x 3100 -y 1390 -defaultsOSRD
preplace portBus gmac_tx_ringbuffer_slot_id -pg 1 -lvl 6 -x 3100 -y 1410 -defaultsOSRD
preplace portBus gmac_rx_data_write_data -pg 1 -lvl 6 -x 3100 -y 1490 -defaultsOSRD
preplace portBus gmac_rx_data_write_address -pg 1 -lvl 6 -x 3100 -y 1530 -defaultsOSRD
preplace portBus gmac_rx_data_write_byte_enable -pg 1 -lvl 6 -x 3100 -y 1510 -defaultsOSRD
preplace portBus gmac_rx_data_read_address -pg 1 -lvl 6 -x 3100 -y 1550 -defaultsOSRD
preplace portBus gmac_rx_ringbuffer_slot_id -pg 1 -lvl 6 -x 3100 -y 1570 -defaultsOSRD
preplace portBus gmac_rx_ringbuffer_number_slots_filled -pg 1 -lvl 0 -x -60 -y 1520 -defaultsOSRD
preplace portBus gmac_tx_data_read_data -pg 1 -lvl 0 -x -60 -y 1380 -defaultsOSRD
preplace portBus gmac_reg_rx_overflow_count -pg 1 -lvl 0 -x -60 -y 1200 -defaultsOSRD
preplace portBus gmac_tx_data_read_byte_enable -pg 1 -lvl 0 -x -60 -y 1400 -defaultsOSRD
preplace portBus gmac_reg_rx_almost_full_count -pg 1 -lvl 0 -x -60 -y 1220 -defaultsOSRD
preplace portBus gmac_reg_rx_bad_packet_count -pg 1 -lvl 0 -x -60 -y 1240 -defaultsOSRD
preplace portBus gmac_tx_ringbuffer_number_slots_filled -pg 1 -lvl 0 -x -60 -y 1440 -defaultsOSRD
preplace portBus gmac_reg_arp_size -pg 1 -lvl 0 -x -60 -y 1260 -defaultsOSRD
preplace portBus gmac_reg_tx_word_size -pg 1 -lvl 0 -x -60 -y 1280 -defaultsOSRD
preplace portBus gmac_reg_rx_word_size -pg 1 -lvl 0 -x -60 -y 1300 -defaultsOSRD
preplace portBus gmac_reg_tx_buffer_max_size -pg 1 -lvl 0 -x -60 -y 1320 -defaultsOSRD
preplace portBus gmac_rx_data_read_data -pg 1 -lvl 0 -x -60 -y 1460 -defaultsOSRD
preplace portBus gmac_reg_rx_buffer_max_size -pg 1 -lvl 0 -x -60 -y 1340 -defaultsOSRD
preplace portBus gmac_arp_cache_read_data -pg 1 -lvl 0 -x -60 -y 1360 -defaultsOSRD
preplace portBus gmac_rx_data_read_byte_enable -pg 1 -lvl 0 -x -60 -y 1480 -defaultsOSRD
preplace portBus gmac_reg_rx_valid_count -pg 1 -lvl 0 -x -60 -y 1180 -defaultsOSRD
preplace portBus gmac_reg_tx_valid_count -pg 1 -lvl 0 -x -60 -y 1060 -defaultsOSRD
preplace portBus gmac_reg_phy_status_l -pg 1 -lvl 0 -x -60 -y 980 -defaultsOSRD
preplace portBus gmac_reg_tx_packet_rate -pg 1 -lvl 0 -x -60 -y 1000 -defaultsOSRD
preplace portBus gmac_reg_tx_overflow_count -pg 1 -lvl 0 -x -60 -y 1080 -defaultsOSRD
preplace portBus gmac_reg_tx_afull_count -pg 1 -lvl 0 -x -60 -y 1100 -defaultsOSRD
preplace portBus gmac_reg_tx_packet_count -pg 1 -lvl 0 -x -60 -y 1020 -defaultsOSRD
preplace portBus gmac_reg_rx_packet_rate -pg 1 -lvl 0 -x -60 -y 1120 -defaultsOSRD
preplace portBus gmac_reg_rx_packet_count -pg 1 -lvl 0 -x -60 -y 1140 -defaultsOSRD
preplace portBus gmac_reg_rx_valid_rate -pg 1 -lvl 0 -x -60 -y 1160 -defaultsOSRD
preplace portBus gmac_reg_phy_status_h -pg 1 -lvl 0 -x -60 -y 960 -defaultsOSRD
preplace portBus gmac_reg_tx_valid_rate -pg 1 -lvl 0 -x -60 -y 1040 -defaultsOSRD
preplace portBus gmac_reg_core_type -pg 1 -lvl 0 -x -60 -y 940 -defaultsOSRD
preplace inst microblaze_0_local_memory -pg 1 -lvl 4 -x 2180 -y 220 -defaultsOSRD
preplace inst ethernetcore_mm_0 -pg 1 -lvl 5 -x 2740 -y 1280 -defaultsOSRD
preplace inst axi_timebase_wdt_0 -pg 1 -lvl 5 -x 2740 -y 330 -defaultsOSRD
preplace inst axi_timer_0 -pg 1 -lvl 5 -x 2740 -y 530 -defaultsOSRD
preplace inst mdm_0 -pg 1 -lvl 2 -x 1300 -y 560 -defaultsOSRD
preplace inst microblaze_0 -pg 1 -lvl 3 -x 1740 -y 210 -defaultsOSRD
preplace inst microblaze_0_axi_intc -pg 1 -lvl 2 -x 1300 -y 160 -defaultsOSRD
preplace inst microblaze_0_axi_periph -pg 1 -lvl 4 -x 2180 -y 670 -defaultsOSRD
preplace inst microblaze_0_xlconcat -pg 1 -lvl 1 -x 540 -y 420 -defaultsOSRD
preplace inst axi_uartlite_0 -pg 1 -lvl 5 -x 2740 -y 700 -defaultsOSRD
preplace inst proc_sys_reset_0 -pg 1 -lvl 1 -x 540 -y 220 -defaultsOSRD
preplace netloc axi_timebase_wdt_0_timebase_interrupt 1 0 6 -10 10 N 10 NJ 10 NJ 10 NJ 10 3050
preplace netloc axi_timebase_wdt_0_wdt_interrupt 1 0 6 20 120 750 310 NJ 310 NJ 310 2350J 240 3040
preplace netloc axi_timer_0_interrupt 1 0 6 10 110 760 340 NJ 340 NJ 340 2350J 420 3040
preplace netloc mdm_0_Interrupt 1 0 3 30 530 740 460 1450
preplace netloc microblaze_0_Clk 1 0 5 -30 100 770 320 1500 320 2020 1070 2380
preplace netloc microblaze_0_intr 1 1 1 720 170n
preplace netloc proc_sys_reset_0_mb_reset 1 1 2 790 270 1490J
preplace netloc proc_sys_reset_0_peripheral_aresetn 1 1 4 780 660 NJ 660 2030 1090 2390
preplace netloc ethernetcore_mm_0_irq 1 0 6 -20 30 N 30 NJ 30 NJ 30 NJ 30 3060
preplace netloc ethernetcore_mm_0_gmac_reg_mac_promiscous_mode 1 5 1 NJ 1150
preplace netloc ethernetcore_mm_0_gmac_arp_cache_write_enable 1 5 1 NJ 1190
preplace netloc ethernetcore_mm_0_gmac_reg_counters_reset 1 5 1 NJ 1170
preplace netloc ethernetcore_mm_0_gmac_reg_phy_control_l 1 5 1 NJ 970
preplace netloc ethernetcore_mm_0_gmac_reg_mac_address 1 5 1 NJ 990
preplace netloc ethernetcore_mm_0_gmac_reg_local_ip_address 1 5 1 NJ 1010
preplace netloc ethernetcore_mm_0_gmac_reg_phy_control_h 1 5 1 NJ 950
preplace netloc ethernetcore_mm_0_gmac_reg_gateway_ip_address 1 5 1 NJ 1030
preplace netloc ethernetcore_mm_0_gmac_reg_multicast_ip_address 1 5 1 NJ 1050
preplace netloc ethernetcore_mm_0_gmac_reg_multicast_ip_mask 1 5 1 NJ 1070
preplace netloc ethernetcore_mm_0_gmac_reg_udp_port 1 5 1 NJ 1090
preplace netloc ethernetcore_mm_0_gmac_reg_udp_port_mask 1 5 1 NJ 1110
preplace netloc ethernetcore_mm_0_gmac_arp_cache_write_data 1 5 1 NJ 1230
preplace netloc ethernetcore_mm_0_gmac_reg_mac_enable 1 5 1 NJ 1130
preplace netloc ethernetcore_mm_0_gmac_arp_cache_read_enable 1 5 1 NJ 1210
preplace netloc ethernetcore_mm_0_gmac_arp_cache_write_address 1 5 1 NJ 1250
preplace netloc ethernetcore_mm_0_gmac_tx_data_write_data 1 5 1 NJ 1330
preplace netloc ethernetcore_mm_0_gmac_arp_cache_read_address 1 5 1 NJ 1270
preplace netloc ethernetcore_mm_0_gmac_tx_data_write_byte_enable 1 5 1 NJ 1350
preplace netloc ethernetcore_mm_0_gmac_tx_data_write_address 1 5 1 NJ 1370
preplace netloc ethernetcore_mm_0_gmac_tx_data_write_enable 1 5 1 NJ 1290
preplace netloc ethernetcore_mm_0_gmac_tx_data_read_address 1 5 1 NJ 1390
preplace netloc ethernetcore_mm_0_gmac_tx_ringbuffer_slot_id 1 5 1 NJ 1410
preplace netloc ethernetcore_mm_0_gmac_tx_data_read_enable 1 5 1 NJ 1310
preplace netloc ethernetcore_mm_0_gmac_rx_data_write_data 1 5 1 NJ 1490
preplace netloc ethernetcore_mm_0_gmac_rx_data_write_address 1 5 1 NJ 1530
preplace netloc ethernetcore_mm_0_gmac_rx_data_write_byte_enable 1 5 1 NJ 1510
preplace netloc ethernetcore_mm_0_gmac_rx_data_write_enable 1 5 1 NJ 1450
preplace netloc ethernetcore_mm_0_gmac_rx_data_read_address 1 5 1 NJ 1550
preplace netloc ethernetcore_mm_0_gmac_rx_ringbuffer_slot_id 1 5 1 NJ 1570
preplace netloc ethernetcore_mm_0_gmac_tx_ringbuffer_slot_set 1 5 1 NJ 1430
preplace netloc ethernetcore_mm_0_gmac_rx_data_read_enable 1 5 1 NJ 1470
preplace netloc ethernetcore_mm_0_gmac_rx_ringbuffer_slot_clear 1 5 1 NJ 1590
preplace netloc gmac_rx_ringbuffer_number_slots_filled_0_1 1 0 5 NJ 1520 N 1520 NJ 1520 NJ 1520 NJ
preplace netloc gmac_tx_data_read_data_0_1 1 0 5 NJ 1380 N 1380 NJ 1380 NJ 1380 NJ
preplace netloc gmac_reg_rx_overflow_count_0_1 1 0 5 NJ 1200 N 1200 NJ 1200 NJ 1200 NJ
preplace netloc gmac_tx_data_read_byte_enable_0_1 1 0 5 NJ 1400 N 1400 NJ 1400 NJ 1400 NJ
preplace netloc gmac_rx_ringbuffer_slot_status_0_1 1 0 5 NJ 1500 N 1500 NJ 1500 NJ 1500 NJ
preplace netloc gmac_reg_rx_almost_full_count_0_1 1 0 5 NJ 1220 N 1220 NJ 1220 NJ 1220 NJ
preplace netloc gmac_reg_rx_bad_packet_count_0_1 1 0 5 NJ 1240 N 1240 NJ 1240 NJ 1240 NJ
preplace netloc gmac_tx_ringbuffer_number_slots_filled_0_1 1 0 5 NJ 1440 N 1440 NJ 1440 NJ 1440 NJ
preplace netloc gmac_reg_arp_size_0_1 1 0 5 NJ 1260 N 1260 NJ 1260 NJ 1260 NJ
preplace netloc gmac_reg_tx_word_size_0_1 1 0 5 NJ 1280 N 1280 NJ 1280 NJ 1280 NJ
preplace netloc gmac_tx_ringbuffer_slot_status_0_1 1 0 5 NJ 1420 N 1420 NJ 1420 NJ 1420 NJ
preplace netloc gmac_reg_rx_word_size_0_1 1 0 5 NJ 1300 N 1300 NJ 1300 NJ 1300 NJ
preplace netloc gmac_reg_tx_buffer_max_size_0_1 1 0 5 NJ 1320 N 1320 NJ 1320 NJ 1320 NJ
preplace netloc gmac_rx_data_read_data_0_1 1 0 5 NJ 1460 N 1460 NJ 1460 NJ 1460 NJ
preplace netloc gmac_reg_rx_buffer_max_size_0_1 1 0 5 NJ 1340 N 1340 NJ 1340 NJ 1340 NJ
preplace netloc gmac_arp_cache_read_data_0_1 1 0 5 NJ 1360 N 1360 NJ 1360 NJ 1360 NJ
preplace netloc gmac_rx_data_read_byte_enable_0_1 1 0 5 NJ 1480 N 1480 NJ 1480 NJ 1480 NJ
preplace netloc gmac_reg_rx_valid_count_0_1 1 0 5 NJ 1180 N 1180 NJ 1180 NJ 1180 NJ
preplace netloc gmac_reg_tx_valid_count_0_1 1 0 5 NJ 1060 N 1060 NJ 1060 NJ 1060 NJ
preplace netloc gmac_reg_phy_status_l_0_1 1 0 5 NJ 980 750 1010 NJ 1010 1980J 1050 2420J
preplace netloc gmac_reg_tx_packet_rate_0_1 1 0 5 NJ 1000 730 1020 NJ 1020 1990J 1010 2410J
preplace netloc gmac_reg_tx_overflow_count_0_1 1 0 5 NJ 1080 N 1080 NJ 1080 NJ 1080 NJ
preplace netloc gmac_reg_tx_afull_count_0_1 1 0 5 NJ 1100 N 1100 NJ 1100 NJ 1100 NJ
preplace netloc gmac_reg_tx_packet_count_0_1 1 0 5 NJ 1020 720 1030 NJ 1030 NJ 1030 2430J
preplace netloc gmac_reg_rx_packet_rate_0_1 1 0 5 NJ 1120 N 1120 NJ 1120 NJ 1120 NJ
preplace netloc gmac_reg_rx_packet_count_0_1 1 0 5 NJ 1140 N 1140 NJ 1140 NJ 1140 NJ
preplace netloc gmac_reg_rx_valid_rate_0_1 1 0 5 NJ 1160 N 1160 NJ 1160 NJ 1160 NJ
preplace netloc gmac_reg_phy_status_h_0_1 1 0 5 NJ 960 770 1000 NJ 1000 2000J 1020 2400J
preplace netloc gmac_reg_tx_valid_rate_0_1 1 0 5 NJ 1040 N 1040 NJ 1040 NJ 1040 NJ
preplace netloc gmac_reg_core_type_0_1 1 0 5 NJ 940 780 990 NJ 990 2010J 1000 2350J
preplace netloc axi_uartlite_0_interrupt 1 0 6 0 20 N 20 NJ 20 NJ 20 NJ 20 3070
preplace netloc PSReset_1 1 0 1 -40 160n
preplace netloc ClockStable_1 1 0 1 -30 220n
preplace netloc mdm_0_Debug_SYS_Rst 1 0 3 30 40 NJ 40 1460
preplace netloc SYS_Rst_1 1 1 3 740J 300 NJ 300 2000
preplace netloc ARESETN_1 1 1 3 730J 280 1470J 350 2030
preplace netloc microblaze_0_interrupt 1 2 1 1500 160n
preplace netloc microblaze_0_axi_periph_M03_AXI 1 4 1 2370 480n
preplace netloc microblaze_0_debug 1 2 1 1480 200n
preplace netloc microblaze_0_axi_periph_M08_AXI 1 4 1 2340 740n
preplace netloc microblaze_0_ilmb_1 1 3 1 N 210
preplace netloc microblaze_0_mdm_axi 1 1 4 790 330 NJ 330 NJ 330 2330
preplace netloc microblaze_0_axi_dp 1 3 1 2010 230n
preplace netloc microblaze_0_axi_periph_M02_AXI 1 4 1 2360 300n
preplace netloc mdm_0_M_AXI 1 2 2 NJ 520 2000
preplace netloc microblaze_0_dlmb_1 1 3 1 N 190
preplace netloc microblaze_0_axi_periph_M06_AXI 1 4 1 2360 700n
preplace netloc microblaze_0_axi_periph_M07_AXI 1 4 1 2350 720n
preplace netloc microblaze_0_intc_axi 1 1 4 790 50 NJ 50 NJ 50 2340
preplace netloc microblaze_0_axi_periph_M09_AXI 1 4 1 2330 760n
preplace netloc microblaze_0_axi_periph_M05_AXI 1 4 1 2370 680n
preplace netloc microblaze_0_axi_periph_M04_AXI 1 4 1 2420 660n
preplace netloc axi_uartlite_0_UART 1 5 1 N 690
levelinfo -pg 1 -60 540 1300 1740 2180 2740 3100
pagesize -pg 1 -db -bbox -sgen -430 0 3430 1780
"
}

  # Restore current instance
  current_bd_instance $oldCurInst

  validate_bd_design
  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_microblaze_axi_us_plus()
cr_bd_microblaze_axi_us_plus ""
set_property REGISTERED_WITH_MANAGER "1" [get_files microblaze_axi_us_plus.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files microblaze_axi_us_plus.bd ] 


# Set 'sources_1' top instance to gmactop using object properties
set obj [get_filesets sources_1]
set_property -name "top" -value "gmactop" -objects $obj

# Add constraints


# Create 'ethconstrs' fileset (if not found)
if {[string equal [get_filesets -quiet ethconstrs] ""]} {
  create_fileset -constrset ethconstrs
}

# Set 'ethconstrs' fileset object
set obj [get_filesets ethconstrs]

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/../../../sources/constraints/xilinx/vcu118/partialreconfig/gmactop.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/../../../sources/constraints/xilinx/vcu118/partialreconfig/gmactop.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets ethconstrs] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/../../../sources/constraints/xilinx/vcu118/partialreconfig/gmac_io.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/../../../sources/constraints/xilinx/vcu118/partialreconfig/gmac_io.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets ethconstrs] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/../../../sources/constraints/xilinx/vcu118/partialreconfig/gmac_pblocks.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/../../../sources/constraints/xilinx/vcu118/partialreconfig/gmac_pblocks.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets ethconstrs] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Set 'ethconstrs' fileset properties
set obj [get_filesets ethconstrs]
set_property -name "target_constrs_file" -value "[file normalize "$origin_dir/../../../sources/constraints/xilinx/vcu118/partialreconfig/gmac_pblocks.xdc"]" -objects $obj

# Create 'blinker_rm_constr' fileset (if not found)
if {[string equal [get_filesets -quiet blinker_rm_constr] ""]} {
  create_fileset -constrset blinker_rm_constr
}

# Set 'blinker_rm_constr' fileset object
set obj [get_filesets blinker_rm_constr]

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/../../../sources/constraints/xilinx/vcu118/partialreconfig/casper_rm_blinker_pblocks.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/../../../sources/constraints/xilinx/vcu118/partialreconfig/casper_rm_blinker_pblocks.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets blinker_rm_constr] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/../../../sources/constraints/xilinx/vcu118/partialreconfig/gmac_io.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/../../../sources/constraints/xilinx/vcu118/partialreconfig/gmac_io.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets blinker_rm_constr] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/../../../sources/constraints/xilinx/vcu118/partialreconfig/gmactop.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/../../../sources/constraints/xilinx/vcu118/partialreconfig/gmactop.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets blinker_rm_constr] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Set 'blinker_rm_constr' fileset properties
set obj [get_filesets blinker_rm_constr]

# Create 'flasher_rm_constr' fileset (if not found)
if {[string equal [get_filesets -quiet flasher_rm_constr] ""]} {
  create_fileset -constrset flasher_rm_constr
}

# Set 'flasher_rm_constr' fileset object
set obj [get_filesets flasher_rm_constr]

# Empty (no sources present)

# Set 'flasher_rm_constr' fileset properties
set obj [get_filesets flasher_rm_constr]


# Create 'casper_rm' partition definition
create_partition_def -name casper_rm -module partialblinker
set obj [get_partition_defs casper_rm]
set_property -name "name" -value "casper_rm" -objects $obj
set_property -name "use_blackbox_stub" -value "1" -objects $obj

# Create 'partialblinker' reconfigurable module
set partitionDef [get_partition_defs casper_rm]
create_reconfig_module -name partialblinker -partition_def $partitionDef
set_property default_rm partialblinker $partitionDef
set obj [get_reconfig_modules partialblinker]
set_property -name "module_name" -value "partialblinker" -objects $obj

set files [list \
 "[file normalize "$origin_dir/../../../sources/vhdl/rtl/ledblinker/ledflasher.vhd"]"\
 "[file normalize "$origin_dir/../../../sources/vhdl/implementation/xilinx/vcu118/partialreconfig/partialblinker.vhd"]"\
]
add_files -norecurse -of_objects [get_reconfig_modules partialblinker] $files

# Set 'partialblinker' fileset file properties for remote files
set file "$origin_dir/../../../sources/vhdl/rtl/ledblinker/ledflasher.vhd"
set file [file normalize $file]
set obj [get_files -of_objects [get_reconfig_modules partialblinker] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $obj

set file "$origin_dir/../../../sources/vhdl/implementation/xilinx/vcu118/partialreconfig/partialblinker.vhd"
set file [file normalize $file]
set obj [get_files -of_objects [get_reconfig_modules partialblinker] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $obj


# Set 'partialblinker' fileset file properties for local files
# None

# Create 'partialflasher' reconfigurable module
set partitionDef [get_partition_defs casper_rm]
create_reconfig_module -name partialflasher -partition_def $partitionDef
set obj [get_reconfig_modules partialflasher]
set_property -name "module_name" -value "partialflasher" -objects $obj

set files [list \
 "[file normalize "$origin_dir/../../../sources/vhdl/rtl/ledblinker/ledflasher.vhd"]"\
 "[file normalize "$origin_dir/../../../sources/vhdl/implementation/xilinx/vcu118/partialreconfig/partialflasher.vhd"]"\
]
add_files -norecurse -of_objects [get_reconfig_modules partialflasher] $files

# Set 'partialflasher' fileset file properties for remote files
set file "$origin_dir/../../../sources/vhdl/rtl/ledblinker/ledflasher.vhd"
set file [file normalize $file]
set obj [get_files -of_objects [get_reconfig_modules partialflasher] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $obj

set file "$origin_dir/../../../sources/vhdl/implementation/xilinx/vcu118/partialreconfig/partialflasher.vhd"
set file [file normalize $file]
set obj [get_files -of_objects [get_reconfig_modules partialflasher] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $obj


# Set 'partialflasher' fileset file properties for local files
# None

# Create 'config_blinker' pr configurations
create_pr_configuration -name config_blinker
set obj [get_pr_configurations config_blinker]
set_property -name "auto_import" -value "1" -objects $obj
set_property -name "partition_cell_rms" -value "PartialBlinker_i:partialblinker" -objects $obj

# Create 'config_empty' pr configurations
create_pr_configuration -name config_empty
set obj [get_pr_configurations config_empty]
set_property -name "auto_import" -value "1" -objects $obj
set_property -name "greybox_cells" -value "PartialBlinker_i" -objects $obj

# Create 'config_flasher' pr configurations
create_pr_configuration -name config_flasher
set obj [get_pr_configurations config_flasher]
set_property -name "auto_import" -value "1" -objects $obj
set_property -name "partition_cell_rms" -value "PartialBlinker_i:partialflasher" -objects $obj

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
    create_run -name synth_1 -part xcvu9p-flga2104-2L-e -flow {Vivado Synthesis 2018} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset blinker_rm_constr
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2018" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1
}
set obj [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs synth_1]
set_property -name "constrset" -value "blinker_rm_constr" -objects $obj
set_property -name "needs_refresh" -value "1" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# Create 'partialblinker_synth_1' run (if not found)
if {[string equal [get_runs -quiet partialblinker_synth_1] ""]} {
    create_run -name partialblinker_synth_1 -part xcvu9p-flga2104-2L-e -flow {Vivado Synthesis 2018} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset partialblinker
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs partialblinker_synth_1]
  set_property flow "Vivado Synthesis 2018" [get_runs partialblinker_synth_1]
}
set obj [get_runs partialblinker_synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'partialblinker_synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialblinker_synth_1] partialblinker_synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name partialblinker_synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs partialblinker_synth_1
}
set obj [get_report_configs -of_objects [get_runs partialblinker_synth_1] partialblinker_synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs partialblinker_synth_1]
set_property -name "constrset" -value "partialblinker" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# Create 'partialflasher_synth_1' run (if not found)
if {[string equal [get_runs -quiet partialflasher_synth_1] ""]} {
    create_run -name partialflasher_synth_1 -part xcvu9p-flga2104-2L-e -flow {Vivado Synthesis 2018} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset partialflasher
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs partialflasher_synth_1]
  set_property flow "Vivado Synthesis 2018" [get_runs partialflasher_synth_1]
}
set obj [get_runs partialflasher_synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'partialflasher_synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialflasher_synth_1] partialflasher_synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name partialflasher_synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs partialflasher_synth_1
}
set obj [get_report_configs -of_objects [get_runs partialflasher_synth_1] partialflasher_synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs partialflasher_synth_1]
set_property -name "constrset" -value "partialflasher" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
    create_run -name impl_1 -part xcvu9p-flga2104-2L-e -flow {Vivado Implementation 2018} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset blinker_rm_constr -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
  set_property flow "Vivado Implementation 2018" [get_runs impl_1]
}
set obj [get_runs impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1]
set_property -name "constrset" -value "blinker_rm_constr" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.phys_opt_design.is_enabled" -value "1" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'partialblinker_impl_1' run (if not found)
if {[string equal [get_runs -quiet partialblinker_impl_1] ""]} {
    create_run -name partialblinker_impl_1 -part xcvu9p-flga2104-2L-e -flow {Vivado Implementation 2018} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset partialblinker -parent_run partialblinker_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs partialblinker_impl_1]
  set_property flow "Vivado Implementation 2018" [get_runs partialblinker_impl_1]
}
set obj [get_runs partialblinker_impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'partialblinker_impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name partialblinker_impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs partialblinker_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'partialblinker_impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name partialblinker_impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs partialblinker_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'partialblinker_impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name partialblinker_impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs partialblinker_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'partialblinker_impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name partialblinker_impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs partialblinker_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'partialblinker_impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name partialblinker_impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs partialblinker_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'partialblinker_impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name partialblinker_impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs partialblinker_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'partialblinker_impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name partialblinker_impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs partialblinker_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'partialblinker_impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name partialblinker_impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs partialblinker_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'partialblinker_impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name partialblinker_impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs partialblinker_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'partialblinker_impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name partialblinker_impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs partialblinker_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'partialblinker_impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name partialblinker_impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs partialblinker_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'partialblinker_impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name partialblinker_impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs partialblinker_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'partialblinker_impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name partialblinker_impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs partialblinker_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'partialblinker_impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name partialblinker_impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs partialblinker_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'partialblinker_impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name partialblinker_impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs partialblinker_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'partialblinker_impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name partialblinker_impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs partialblinker_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'partialblinker_impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name partialblinker_impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs partialblinker_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'partialblinker_impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name partialblinker_impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs partialblinker_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'partialblinker_impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name partialblinker_impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs partialblinker_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'partialblinker_impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name partialblinker_impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs partialblinker_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'partialblinker_impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name partialblinker_impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs partialblinker_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'partialblinker_impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name partialblinker_impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs partialblinker_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs partialblinker_impl_1]
set_property -name "constrset" -value "partialblinker" -objects $obj
set_property -name "include_in_archive" -value "0" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'partialflasher_impl_1' run (if not found)
if {[string equal [get_runs -quiet partialflasher_impl_1] ""]} {
    create_run -name partialflasher_impl_1 -part xcvu9p-flga2104-2L-e -flow {Vivado Implementation 2018} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset partialflasher -parent_run partialflasher_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs partialflasher_impl_1]
  set_property flow "Vivado Implementation 2018" [get_runs partialflasher_impl_1]
}
set obj [get_runs partialflasher_impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'partialflasher_impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name partialflasher_impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs partialflasher_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'partialflasher_impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name partialflasher_impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs partialflasher_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'partialflasher_impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name partialflasher_impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs partialflasher_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'partialflasher_impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name partialflasher_impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs partialflasher_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'partialflasher_impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name partialflasher_impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs partialflasher_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'partialflasher_impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name partialflasher_impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs partialflasher_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'partialflasher_impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name partialflasher_impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs partialflasher_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'partialflasher_impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name partialflasher_impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs partialflasher_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'partialflasher_impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name partialflasher_impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs partialflasher_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'partialflasher_impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name partialflasher_impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs partialflasher_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'partialflasher_impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name partialflasher_impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs partialflasher_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'partialflasher_impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name partialflasher_impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs partialflasher_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'partialflasher_impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name partialflasher_impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs partialflasher_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'partialflasher_impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name partialflasher_impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs partialflasher_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'partialflasher_impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name partialflasher_impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs partialflasher_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'partialflasher_impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name partialflasher_impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs partialflasher_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'partialflasher_impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name partialflasher_impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs partialflasher_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'partialflasher_impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name partialflasher_impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs partialflasher_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'partialflasher_impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name partialflasher_impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs partialflasher_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'partialflasher_impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name partialflasher_impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs partialflasher_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'partialflasher_impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name partialflasher_impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs partialflasher_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'partialflasher_impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name partialflasher_impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs partialflasher_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs partialflasher_impl_1]
set_property -name "constrset" -value "partialflasher" -objects $obj
set_property -name "include_in_archive" -value "0" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'impl_blinker' run (if not found)
if {[string equal [get_runs -quiet impl_blinker] ""]} {
    create_run -name impl_blinker -part xcvu9p-flga2104-2L-e -flow {Vivado Implementation 2018} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset blinker_rm_constr -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_blinker]
  set_property flow "Vivado Implementation 2018" [get_runs impl_blinker]
}
set_property pr_configuration config_blinker [get_runs impl_blinker]
set obj [get_runs impl_blinker]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_blinker_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_blinker_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_blinker
}
set obj [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_blinker_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_blinker_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_blinker
}
set obj [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_blinker_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_blinker_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_blinker
}
set obj [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_blinker_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_blinker_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_blinker
}
set obj [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_blinker_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_place_report_io_0] "" ] } {
  create_report_config -report_name impl_blinker_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_blinker
}
set obj [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_blinker_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_blinker_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_blinker
}
set obj [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_blinker_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_blinker_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_blinker
}
set obj [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_blinker_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_blinker_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_blinker
}
set obj [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_blinker_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_blinker_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_blinker
}
set obj [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_blinker_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_blinker_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_blinker
}
set obj [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_blinker_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_blinker_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_blinker
}
set obj [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_blinker_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_blinker_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_blinker
}
set obj [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_blinker_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_blinker_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_blinker
}
set obj [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_blinker_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_blinker_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_blinker
}
set obj [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_blinker_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_route_report_power_0] "" ] } {
  create_report_config -report_name impl_blinker_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_blinker
}
set obj [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_blinker_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_blinker_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_blinker
}
set obj [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_blinker_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_blinker_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_blinker
}
set obj [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_blinker_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_blinker_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_blinker
}
set obj [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_blinker_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_blinker_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_blinker
}
set obj [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_blinker_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_blinker_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_blinker
}
set obj [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_blinker_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_blinker_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_blinker
}
set obj [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_blinker_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_blinker_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_blinker
}
set obj [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_blinker]
set_property -name "constrset" -value "blinker_rm_constr" -objects $obj
set_property -name "needs_refresh" -value "1" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.raw_bitfile" -value "1" -objects $obj
set_property -name "steps.write_bitstream.args.bin_file" -value "1" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'impl_flasher' run (if not found)
if {[string equal [get_runs -quiet impl_flasher] ""]} {
      create_run -name impl_flasher -part xcvu9p-flga2104-2L-e -flow {Vivado Implementation 2018} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -pr_config config_flasher -constrset flasher_rm_constr -parent_run impl_blinker
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_flasher]
  set_property flow "Vivado Implementation 2018" [get_runs impl_flasher]
}
set obj [get_runs impl_flasher]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_flasher_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_flasher_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_flasher
}
set obj [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_flasher_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_flasher_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_flasher
}
set obj [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_flasher_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_flasher_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_flasher
}
set obj [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_flasher_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_flasher_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_flasher
}
set obj [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_flasher_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_place_report_io_0] "" ] } {
  create_report_config -report_name impl_flasher_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_flasher
}
set obj [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_flasher_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_flasher_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_flasher
}
set obj [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_flasher_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_flasher_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_flasher
}
set obj [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_flasher_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_flasher_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_flasher
}
set obj [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_flasher_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_flasher_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_flasher
}
set obj [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_flasher_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_flasher_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_flasher
}
set obj [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_flasher_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_flasher_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_flasher
}
set obj [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_flasher_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_flasher_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_flasher
}
set obj [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_flasher_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_flasher_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_flasher
}
set obj [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_flasher_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_flasher_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_flasher
}
set obj [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_flasher_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_route_report_power_0] "" ] } {
  create_report_config -report_name impl_flasher_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_flasher
}
set obj [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_flasher_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_flasher_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_flasher
}
set obj [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_flasher_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_flasher_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_flasher
}
set obj [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_flasher_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_flasher_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_flasher
}
set obj [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_flasher_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_flasher_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_flasher
}
set obj [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_flasher_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_flasher_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_flasher
}
set obj [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_flasher_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_flasher_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_flasher
}
set obj [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_flasher_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_flasher_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_flasher
}
set obj [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_flasher]
set_property -name "constrset" -value "flasher_rm_constr" -objects $obj
set_property -name "needs_refresh" -value "1" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.raw_bitfile" -value "1" -objects $obj
set_property -name "steps.write_bitstream.args.bin_file" -value "1" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'impl_empty' run (if not found)
if {[string equal [get_runs -quiet impl_empty] ""]} {
      create_run -name impl_empty -part xcvu9p-flga2104-2L-e -flow {Vivado Implementation 2018} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -pr_config config_empty -constrset ethconstrs -parent_run impl_blinker
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_empty]
  set_property flow "Vivado Implementation 2018" [get_runs impl_empty]
}
set obj [get_runs impl_empty]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_empty_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_empty] impl_empty_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_empty_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_empty
}
set obj [get_report_configs -of_objects [get_runs impl_empty] impl_empty_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_empty_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_empty] impl_empty_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_empty_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_empty
}
set obj [get_report_configs -of_objects [get_runs impl_empty] impl_empty_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_empty_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_empty] impl_empty_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_empty_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_empty
}
set obj [get_report_configs -of_objects [get_runs impl_empty] impl_empty_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_empty_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_empty] impl_empty_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_empty_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_empty
}
set obj [get_report_configs -of_objects [get_runs impl_empty] impl_empty_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_empty_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_empty] impl_empty_place_report_io_0] "" ] } {
  create_report_config -report_name impl_empty_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_empty
}
set obj [get_report_configs -of_objects [get_runs impl_empty] impl_empty_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_empty_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_empty] impl_empty_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_empty_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_empty
}
set obj [get_report_configs -of_objects [get_runs impl_empty] impl_empty_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_empty_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_empty] impl_empty_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_empty_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_empty
}
set obj [get_report_configs -of_objects [get_runs impl_empty] impl_empty_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_empty_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_empty] impl_empty_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_empty_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_empty
}
set obj [get_report_configs -of_objects [get_runs impl_empty] impl_empty_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_empty_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_empty] impl_empty_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_empty_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_empty
}
set obj [get_report_configs -of_objects [get_runs impl_empty] impl_empty_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_empty_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_empty] impl_empty_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_empty_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_empty
}
set obj [get_report_configs -of_objects [get_runs impl_empty] impl_empty_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_empty_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_empty] impl_empty_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_empty_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_empty
}
set obj [get_report_configs -of_objects [get_runs impl_empty] impl_empty_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_empty_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_empty] impl_empty_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_empty_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_empty
}
set obj [get_report_configs -of_objects [get_runs impl_empty] impl_empty_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_empty_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_empty] impl_empty_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_empty_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_empty
}
set obj [get_report_configs -of_objects [get_runs impl_empty] impl_empty_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_empty_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_empty] impl_empty_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_empty_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_empty
}
set obj [get_report_configs -of_objects [get_runs impl_empty] impl_empty_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_empty_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_empty] impl_empty_route_report_power_0] "" ] } {
  create_report_config -report_name impl_empty_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_empty
}
set obj [get_report_configs -of_objects [get_runs impl_empty] impl_empty_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_empty_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_empty] impl_empty_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_empty_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_empty
}
set obj [get_report_configs -of_objects [get_runs impl_empty] impl_empty_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_empty_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_empty] impl_empty_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_empty_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_empty
}
set obj [get_report_configs -of_objects [get_runs impl_empty] impl_empty_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_empty_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_empty] impl_empty_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_empty_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_empty
}
set obj [get_report_configs -of_objects [get_runs impl_empty] impl_empty_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_empty_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_empty] impl_empty_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_empty_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_empty
}
set obj [get_report_configs -of_objects [get_runs impl_empty] impl_empty_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_empty_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_empty] impl_empty_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_empty_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_empty
}
set obj [get_report_configs -of_objects [get_runs impl_empty] impl_empty_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_empty_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_empty] impl_empty_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_empty_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_empty
}
set obj [get_report_configs -of_objects [get_runs impl_empty] impl_empty_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_empty_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_empty] impl_empty_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_empty_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_empty
}
set obj [get_report_configs -of_objects [get_runs impl_empty] impl_empty_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_empty]
set_property -name "constrset" -value "ethconstrs" -objects $obj
set_property -name "needs_refresh" -value "1" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# set the current impl run
current_run -implementation [get_runs impl_blinker]

puts "INFO: Project created:${_xil_proj_name_}"
# Create 'drc_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "drc_1" ] ] ""]} {
create_dashboard_gadget -name {drc_1} -type drc
}
set obj [get_dashboard_gadgets [ list "drc_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_drc_0" -objects $obj

# Create 'methodology_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "methodology_1" ] ] ""]} {
create_dashboard_gadget -name {methodology_1} -type methodology
}
set obj [get_dashboard_gadgets [ list "methodology_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_methodology_0" -objects $obj

# Create 'power_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "power_1" ] ] ""]} {
create_dashboard_gadget -name {power_1} -type power
}
set obj [get_dashboard_gadgets [ list "power_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_power_0" -objects $obj

# Create 'timing_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "timing_1" ] ] ""]} {
create_dashboard_gadget -name {timing_1} -type timing
}
set obj [get_dashboard_gadgets [ list "timing_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_timing_summary_0" -objects $obj

# Create 'utilization_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_1" ] ] ""]} {
create_dashboard_gadget -name {utilization_1} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_1" ] ]
set_property -name "reports" -value "synth_1#synth_1_synth_report_utilization_0" -objects $obj
set_property -name "run.step" -value "synth_design" -objects $obj
set_property -name "run.type" -value "synthesis" -objects $obj
set_property -name "view.type" -value "graph" -objects $obj

# Create 'utilization_2' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_2" ] ] ""]} {
create_dashboard_gadget -name {utilization_2} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_2" ] ]
set_property -name "reports" -value "impl_1#impl_1_place_report_utilization_0" -objects $obj

move_dashboard_gadget -name {utilization_1} -row 0 -col 0
move_dashboard_gadget -name {power_1} -row 1 -col 0
move_dashboard_gadget -name {drc_1} -row 2 -col 0
move_dashboard_gadget -name {timing_1} -row 0 -col 1
move_dashboard_gadget -name {utilization_2} -row 1 -col 1
move_dashboard_gadget -name {methodology_1} -row 2 -col 1
