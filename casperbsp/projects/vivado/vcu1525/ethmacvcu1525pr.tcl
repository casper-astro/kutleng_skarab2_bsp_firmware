#*****************************************************************************************
# Vivado (TM) v2018.3 (64-bit)
#
# ethmacvcu1525pr.tcl: Tcl script for re-creating project 'ethernetmacphy'
#
# Generated by Vivado on Mon Jul 30 14:10:27 +0200 2018
# IP Build 2256618 on Thu Jun 14 22:10:49 MDT 2018
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************

# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set _xil_proj_name_ "vcu1525projectpr"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name
}

variable script_file
set script_file "ethmacvcu1525pr.tcl"

#Set and make the output directory where all the generated files and reports will be stored
set outputDir $origin_dir/../project_flow/${_xil_proj_name_}
file mkdir $outputDir

#create project
create_project ${_xil_proj_name_} $outputDir -part xcvu9p-fsgd2104-2L-e -force

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]


# Set project properties
set obj [current_project]
set_property -name "board_part" -value "xilinx.com:vcu1525:part0:1.2" -objects $obj
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
set_property -name "pr_flow" -value "1" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "simulator_language" -value "Mixed" -objects $obj
set_property -name "target_language" -value "VHDL" -objects $obj
set_property -name "xpm_libraries" -value "XPM_CDC XPM_FIFO XPM_MEMORY" -objects $obj


# Set IP repository paths
set obj [get_filesets sources_1]
set_property "ip_repo_paths" "[file normalize "$origin_dir/../../../sources/bd/iprepo"]" $obj

# Rebuild user ip_repo's index before adding any source files
update_ip_catalog -rebuild


#Project op level file
add_files $origin_dir/../../../sources/vhdl/implementation/xilinx/vcu1525/top/gmactop.vhd

#LED files
add_files $origin_dir/../../../sources/vhdl/rtl/ledblinker/ledflasher.vhd
add_files $origin_dir/../../../sources/vhdl/implementation/xilinx/vcu1525/partialreconfig/partialblinker.vhd


#MAC + PHY 1
add_files $origin_dir/../../../sources/vhdl/implementation/xilinx/vcu1525/top/gmacqsfp1top.vhd

#MAC + PHY 2
add_files $origin_dir/../../../sources/vhdl/implementation/xilinx/vcu1525/top/gmacqsfp2top.vhd

#Packet ring buffers
add_files $origin_dir/../../../sources/vhdl/rtl/ringbuffer/packetramsp.vhd
add_files $origin_dir/../../../sources/vhdl/rtl/ringbuffer/packetramdp.vhd
add_files $origin_dir/../../../sources/vhdl/rtl/ringbuffer/packetringbuffer.vhd
add_files $origin_dir/../../../sources/vhdl/rtl/ringbuffer/packetstatusram.vhd
add_files $origin_dir/../../../sources/vhdl/rtl/ringbuffer/dualportpacketringbuffer.vhd


#L-BUS <=> AXIS
add_files $origin_dir/../../../sources/vhdl/rtl/lbustoaxis/lbustoaxis.vhd

#AXIS => L-BUS
add_files $origin_dir/../../../sources/vhdl/rtl/lbustoaxis/mapaxisdatatolbus.vhd
add_files $origin_dir/../../../sources/vhdl/rtl/lbustoaxis/maptkeeptomty.vhd
add_files $origin_dir/../../../sources/vhdl/rtl/lbustoaxis/lbustxaxisrx.vhd

#L-BUS => AXIS
add_files $origin_dir/../../../sources/vhdl/rtl/lbustoaxis/maplbusdatatoaxis.vhd
add_files $origin_dir/../../../sources/vhdl/rtl/lbustoaxis/mapmtytotkeep.vhd
add_files $origin_dir/../../../sources/vhdl/rtl/lbustoaxis/lbusrxaxistx.vhd

#UDP Server (APP Module)
add_files $origin_dir/../../../sources/vhdl/rtl/udp/macinterface/macifudpserver.vhd
add_files $origin_dir/../../../sources/vhdl/rtl/udp/macinterface/macifudpreceiver.vhd
add_files $origin_dir/../../../sources/vhdl/rtl/udp/macinterface/macifudpsender.vhd

#UDP Server (Partial Reconfiguration Module)
add_files $origin_dir/../../../sources/vhdl/rtl/preconfig/icapwritersm.vhd
add_files $origin_dir/../../../sources/vhdl/rtl/preconfig/protocolchecksumprconfigsm.vhd
add_files $origin_dir/../../../sources/vhdl/rtl/preconfig/protocolresponderprconfigsm.vhd
add_files $origin_dir/../../../sources/vhdl/rtl/preconfig/prconfigcontroller.vhd 


#ARP (APP Module) 
add_files $origin_dir/../../../sources/vhdl/rtl/arp/arpmodule.vhd
add_files $origin_dir/../../../sources/vhdl/rtl/arp/arpreceiver.vhd

#Multiplexer Module
add_files $origin_dir/../../../sources/vhdl/rtl/udp/macinterface/axisfabricmultiplexer.vhd
add_files $origin_dir/../../../sources/vhdl/rtl/udp/macinterface/axisthreeportfabricmultiplexer.vhd

#IP Interconnect
add_files $origin_dir/../../../sources/vhdl/rtl/udp/ipcomms.vhd

#Microblaze sub-system

add_files $origin_dir/../../../sources/bd/vcu1525/microblaze_axi_us_plus/hdl/microblaze_axi_us_plus_wrapper.vhd
add_files $origin_dir/../../../sources/bd/vcu1525/microblaze_axi_us_plus/microblaze_axi_us_plus.bd 

# Add Xilinx IP Blocks

#MAC + PHY 1
add_files $origin_dir/../../../sources/ip/vcu1525/ethmacphy100gqsfp14x/EthMACPHY100GQSFP14x.xci

#MAC + PHY 2
add_files $origin_dir/../../../sources/ip/vcu1525/ethmacphy100gqsfp24x/EthMACPHY100GQSFP24x.xci

#AXI FIFO PACKER BUFFER
add_files $origin_dir/../../../sources/ip/vcu1525/axispacketbufferfifo/axispacketbufferfifo.xci

# Clock Generator
add_files $origin_dir/../../../sources/ip/vcu1525/clockgen100mhz/clockgen100mhz.xci


#Debug files
#AXIS ILA
add_files $origin_dir/../../../sources/ip/vcu1525/axisila/axisila.xci

#AXIS ILA
add_files $origin_dir/../../../sources/ip/vcu1525/resetvio/resetvio.xci

#ICAP ILA
add_files $origin_dir/../../../sources/ip/vcu1525/icapila/icap_ila.xci

# Set 'sources_1' top instance to gmactop using object properties
set obj [get_filesets sources_1]
set_property -name "top" -value "gmactop" -objects $obj

# Add constraints


# Create 'ethconstrs' fileset (if not found)
if {[string equal [get_filesets -quiet ethconstrs] ""]} {
  create_fileset -constrset ethconstrs
}


add_files -fileset ethconstrs $origin_dir/../../../sources/constraints/xilinx/vcu1525/partialreconfig/gmactop.xdc
add_files -fileset ethconstrs $origin_dir/../../../sources/constraints/xilinx/vcu1525/partialreconfig/gmac_io.xdc
add_files -fileset ethconstrs $origin_dir/../../../sources/constraints/xilinx/vcu1525/partialreconfig/gmac_pblocks.xdc

set obj [get_filesets ethconstrs]
set_property -name "target_constrs_file" -value "[file normalize "$origin_dir/../../../sources/constraints/xilinx/vcu1525/partialreconfig/gmac_pblocks.xdc"]" -objects $obj


# Create 'blinker_rm_constr' fileset (if not found)
if {[string equal [get_filesets -quiet blinker_rm_constr] ""]} {
  create_fileset -constrset blinker_rm_constr
}


add_files -fileset blinker_rm_constr $origin_dir/../../../sources/constraints/xilinx/vcu1525/partialreconfig/gmactop.xdc
add_files -fileset blinker_rm_constr $origin_dir/../../../sources/constraints/xilinx/vcu1525/partialreconfig/gmac_io.xdc
add_files -fileset blinker_rm_constr $origin_dir/../../../sources/constraints/xilinx/vcu1525/partialreconfig/casper_rm_blinker_pblocks.xdc


# Set 'blinker_rm_constr' fileset properties
set obj [get_filesets blinker_rm_constr]
set_property -name "target_constrs_file" -value "[file normalize "$origin_dir/../../../sources/constraints/xilinx/vcu1525/partialreconfig/gmactop.xdc"]" -objects $obj


# Create 'flasher_rm_constr' fileset (if not found)
if {[string equal [get_filesets -quiet flasher_rm_constr] ""]} {
  create_fileset -constrset flasher_rm_constr
}


add_files -fileset flasher_rm_constr $origin_dir/../../../sources/constraints/xilinx/vcu1525/partialreconfig/gmactop.xdc
add_files -fileset flasher_rm_constr $origin_dir/../../../sources/constraints/xilinx/vcu1525/partialreconfig/gmac_io.xdc
add_files -fileset flasher_rm_constr $origin_dir/../../../sources/constraints/xilinx/vcu1525/partialreconfig/casper_rm_flasher_pblocks.xdc


# Set 'flasher_rm_constr' fileset properties
set obj [get_filesets flasher_rm_constr]
set_property -name "target_constrs_file" -value "[file normalize "$origin_dir/../../../sources/constraints/xilinx/vcu1525/partialreconfig/gmactop.xdc"]" -objects $obj


# Create 'casper_rm' partition definition
create_partition_def -name casper_rm -module partialblinker
set obj [get_partition_defs casper_rm]
set_property -name "name" -value "casper_rm" -objects $obj
set_property -name "use_blackbox_stub" -value "1" -objects $obj

# Create 'partialblinker' reconfigurable module
set partitionDef [get_partition_defs casper_rm]
create_reconfig_module -name partialblinker -partition_def $partitionDef
set_property default_rm partialblinker $partitionDef
set obj [get_reconfig_modules partialblinker]
set_property -name "module_name" -value "partialblinker" -objects $obj

set files [list \
 "[file normalize "$origin_dir/../../../sources/vhdl/rtl/ledblinker/ledflasher.vhd"]"\
 "[file normalize "$origin_dir/../../../sources/vhdl/implementation/xilinx/vcu1525/partialreconfig/partialblinker.vhd"]"\
]
add_files -norecurse -of_objects [get_reconfig_modules partialblinker] $files

# Set 'partialblinker' fileset file properties for remote files
set file "$origin_dir/../../../sources/vhdl/rtl/ledblinker/ledflasher.vhd"
set file [file normalize $file]
set obj [get_files -of_objects [get_reconfig_modules partialblinker] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $obj

set file "$origin_dir/../../../sources/vhdl/implementation/xilinx/vcu1525/partialreconfig/partialblinker.vhd"
set file [file normalize $file]
set obj [get_files -of_objects [get_reconfig_modules partialblinker] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $obj


# Set 'partialblinker' fileset file properties for local files
# None

# Create 'partialflasher' reconfigurable module
set partitionDef [get_partition_defs casper_rm]
create_reconfig_module -name partialflasher -partition_def $partitionDef
set obj [get_reconfig_modules partialflasher]
set_property -name "module_name" -value "partialflasher" -objects $obj

set files [list \
 "[file normalize "$origin_dir/../../../sources/vhdl/rtl/ledblinker/ledflasher.vhd"]"\
 "[file normalize "$origin_dir/../../../sources/vhdl/implementation/xilinx/vcu1525/partialreconfig/partialflasher.vhd"]"\
]
add_files -norecurse -of_objects [get_reconfig_modules partialflasher] $files

# Set 'partialflasher' fileset file properties for remote files
set file "$origin_dir/../../../sources/vhdl/rtl/ledblinker/ledflasher.vhd"
set file [file normalize $file]
set obj [get_files -of_objects [get_reconfig_modules partialflasher] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $obj

set file "$origin_dir/../../../sources/vhdl/implementation/xilinx/vcu1525/partialreconfig/partialflasher.vhd"
set file [file normalize $file]
set obj [get_files -of_objects [get_reconfig_modules partialflasher] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $obj


# Set 'partialflasher' fileset file properties for local files
# None

# Create 'config_blinker' pr configurations
create_pr_configuration -name config_blinker
set obj [get_pr_configurations config_blinker]
set_property -name "auto_import" -value "1" -objects $obj
set_property -name "partition_cell_rms" -value "PartialBlinker_i:partialblinker" -objects $obj

# Create 'config_empty' pr configurations
create_pr_configuration -name config_empty
set obj [get_pr_configurations config_empty]
set_property -name "auto_import" -value "1" -objects $obj
set_property -name "greybox_cells" -value "PartialBlinker_i" -objects $obj

# Create 'config_flasher' pr configurations
create_pr_configuration -name config_flasher
set obj [get_pr_configurations config_flasher]
set_property -name "auto_import" -value "1" -objects $obj
set_property -name "partition_cell_rms" -value "PartialBlinker_i:partialflasher" -objects $obj

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
    create_run -name synth_1 -part xcvu9p-fsgd2104-2L-e -flow {Vivado Synthesis 2018} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset blinker_rm_constr
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2018" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1
}
set obj [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs synth_1]
set_property -name "constrset" -value "blinker_rm_constr" -objects $obj
set_property -name "needs_refresh" -value "1" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# Create 'partialblinker_synth_1' run (if not found)
if {[string equal [get_runs -quiet partialblinker_synth_1] ""]} {
    create_run -name partialblinker_synth_1 -part xcvu9p-fsgd2104-2L-e -flow {Vivado Synthesis 2018} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset partialblinker
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs partialblinker_synth_1]
  set_property flow "Vivado Synthesis 2018" [get_runs partialblinker_synth_1]
}
set obj [get_runs partialblinker_synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'partialblinker_synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialblinker_synth_1] partialblinker_synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name partialblinker_synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs partialblinker_synth_1
}
set obj [get_report_configs -of_objects [get_runs partialblinker_synth_1] partialblinker_synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs partialblinker_synth_1]
set_property -name "constrset" -value "partialblinker" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# Create 'partialflasher_synth_1' run (if not found)
if {[string equal [get_runs -quiet partialflasher_synth_1] ""]} {
    create_run -name partialflasher_synth_1 -part xcvu9p-fsgd2104-2L-e -flow {Vivado Synthesis 2018} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset partialflasher
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs partialflasher_synth_1]
  set_property flow "Vivado Synthesis 2018" [get_runs partialflasher_synth_1]
}
set obj [get_runs partialflasher_synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'partialflasher_synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialflasher_synth_1] partialflasher_synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name partialflasher_synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs partialflasher_synth_1
}
set obj [get_report_configs -of_objects [get_runs partialflasher_synth_1] partialflasher_synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs partialflasher_synth_1]
set_property -name "constrset" -value "partialflasher" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]


# Create 'partialblinker_impl_1' run (if not found)
if {[string equal [get_runs -quiet partialblinker_impl_1] ""]} {
    create_run -name partialblinker_impl_1 -part xcvu9p-fsgd2104-2L-e -flow {Vivado Implementation 2018} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset partialblinker -parent_run partialblinker_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs partialblinker_impl_1]
  set_property flow "Vivado Implementation 2018" [get_runs partialblinker_impl_1]
}
set obj [get_runs partialblinker_impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'partialblinker_impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name partialblinker_impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs partialblinker_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'partialblinker_impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name partialblinker_impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs partialblinker_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'partialblinker_impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name partialblinker_impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs partialblinker_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'partialblinker_impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name partialblinker_impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs partialblinker_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'partialblinker_impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name partialblinker_impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs partialblinker_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'partialblinker_impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name partialblinker_impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs partialblinker_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'partialblinker_impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name partialblinker_impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs partialblinker_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_place_report_control_sets_0]
if { $obj != "" } {

}
# Create 'partialblinker_impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name partialblinker_impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs partialblinker_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'partialblinker_impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name partialblinker_impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs partialblinker_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'partialblinker_impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name partialblinker_impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs partialblinker_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'partialblinker_impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name partialblinker_impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs partialblinker_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'partialblinker_impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name partialblinker_impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs partialblinker_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'partialblinker_impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name partialblinker_impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs partialblinker_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'partialblinker_impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name partialblinker_impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs partialblinker_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'partialblinker_impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name partialblinker_impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs partialblinker_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'partialblinker_impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name partialblinker_impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs partialblinker_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'partialblinker_impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name partialblinker_impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs partialblinker_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_route_report_timing_summary_0]
if { $obj != "" } {

}
# Create 'partialblinker_impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name partialblinker_impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs partialblinker_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'partialblinker_impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name partialblinker_impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs partialblinker_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'partialblinker_impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name partialblinker_impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs partialblinker_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_route_report_bus_skew_0]
if { $obj != "" } {

}
# Create 'partialblinker_impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name partialblinker_impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs partialblinker_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {

}
# Create 'partialblinker_impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name partialblinker_impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs partialblinker_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialblinker_impl_1] partialblinker_impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {

}
set obj [get_runs partialblinker_impl_1]
set_property -name "constrset" -value "partialblinker" -objects $obj
set_property -name "include_in_archive" -value "0" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'partialflasher_impl_1' run (if not found)
if {[string equal [get_runs -quiet partialflasher_impl_1] ""]} {
    create_run -name partialflasher_impl_1 -part xcvu9p-fsgd2104-2L-e -flow {Vivado Implementation 2018} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset partialflasher -parent_run partialflasher_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs partialflasher_impl_1]
  set_property flow "Vivado Implementation 2018" [get_runs partialflasher_impl_1]
}
set obj [get_runs partialflasher_impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'partialflasher_impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name partialflasher_impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs partialflasher_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'partialflasher_impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name partialflasher_impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs partialflasher_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'partialflasher_impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name partialflasher_impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs partialflasher_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'partialflasher_impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name partialflasher_impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs partialflasher_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'partialflasher_impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name partialflasher_impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs partialflasher_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'partialflasher_impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name partialflasher_impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs partialflasher_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'partialflasher_impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name partialflasher_impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs partialflasher_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_place_report_control_sets_0]
if { $obj != "" } {

}
# Create 'partialflasher_impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name partialflasher_impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs partialflasher_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'partialflasher_impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name partialflasher_impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs partialflasher_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'partialflasher_impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name partialflasher_impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs partialflasher_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'partialflasher_impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name partialflasher_impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs partialflasher_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'partialflasher_impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name partialflasher_impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs partialflasher_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'partialflasher_impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name partialflasher_impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs partialflasher_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'partialflasher_impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name partialflasher_impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs partialflasher_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'partialflasher_impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name partialflasher_impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs partialflasher_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'partialflasher_impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name partialflasher_impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs partialflasher_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'partialflasher_impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name partialflasher_impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs partialflasher_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_route_report_timing_summary_0]
if { $obj != "" } {

}
# Create 'partialflasher_impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name partialflasher_impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs partialflasher_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'partialflasher_impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name partialflasher_impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs partialflasher_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'partialflasher_impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name partialflasher_impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs partialflasher_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_route_report_bus_skew_0]
if { $obj != "" } {

}
# Create 'partialflasher_impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name partialflasher_impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs partialflasher_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {

}
# Create 'partialflasher_impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name partialflasher_impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs partialflasher_impl_1
}
set obj [get_report_configs -of_objects [get_runs partialflasher_impl_1] partialflasher_impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {

}
set obj [get_runs partialflasher_impl_1]
set_property -name "constrset" -value "partialflasher" -objects $obj
set_property -name "include_in_archive" -value "0" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'impl_blinker' run (if not found)
if {[string equal [get_runs -quiet impl_blinker] ""]} {
    create_run -name impl_blinker -part xcvu9p-fsgd2104-2L-e -flow {Vivado Implementation 2018} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset blinker_rm_constr -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_blinker]
  set_property flow "Vivado Implementation 2018" [get_runs impl_blinker]
}
set_property pr_configuration config_blinker [get_runs impl_blinker]
set obj [get_runs impl_blinker]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_blinker_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_blinker_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_blinker
}
set obj [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_blinker_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_blinker_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_blinker
}
set obj [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_blinker_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_blinker_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_blinker
}
set obj [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_blinker_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_blinker_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_blinker
}
set obj [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_blinker_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_place_report_io_0] "" ] } {
  create_report_config -report_name impl_blinker_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_blinker
}
set obj [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_blinker_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_blinker_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_blinker
}
set obj [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_blinker_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_blinker_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_blinker
}
set obj [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_place_report_control_sets_0]
if { $obj != "" } {

}
# Create 'impl_blinker_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_blinker_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_blinker
}
set obj [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_blinker_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_blinker_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_blinker
}
set obj [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_blinker_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_blinker_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_blinker
}
set obj [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_blinker_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_blinker_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_blinker
}
set obj [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_blinker_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_blinker_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_blinker
}
set obj [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_blinker_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_blinker_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_blinker
}
set obj [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_blinker_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_blinker_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_blinker
}
set obj [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_blinker_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_route_report_power_0] "" ] } {
  create_report_config -report_name impl_blinker_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_blinker
}
set obj [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_blinker_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_blinker_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_blinker
}
set obj [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_blinker_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_blinker_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_blinker
}
set obj [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_route_report_timing_summary_0]
if { $obj != "" } {

}
# Create 'impl_blinker_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_blinker_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_blinker
}
set obj [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_blinker_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_blinker_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_blinker
}
set obj [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_blinker_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_blinker_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_blinker
}
set obj [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_route_report_bus_skew_0]
if { $obj != "" } {

}
# Create 'impl_blinker_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_blinker_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_blinker
}
set obj [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {

}
# Create 'impl_blinker_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_blinker_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_blinker
}
set obj [get_report_configs -of_objects [get_runs impl_blinker] impl_blinker_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {

}
set obj [get_runs impl_blinker]
set_property -name "constrset" -value "blinker_rm_constr" -objects $obj
set_property -name "needs_refresh" -value "1" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.raw_bitfile" -value "1" -objects $obj
set_property -name "steps.write_bitstream.args.bin_file" -value "1" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "1" -objects $obj

# Create 'impl_flasher' run (if not found)
if {[string equal [get_runs -quiet impl_flasher] ""]} {
      create_run -name impl_flasher -part xcvu9p-fsgd2104-2L-e -flow {Vivado Implementation 2018} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -pr_config config_flasher -constrset flasher_rm_constr -parent_run impl_blinker
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_flasher]
  set_property flow "Vivado Implementation 2018" [get_runs impl_flasher]
}
set obj [get_runs impl_flasher]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_flasher_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_flasher_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_flasher
}
set obj [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_flasher_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_flasher_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_flasher
}
set obj [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_flasher_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_flasher_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_flasher
}
set obj [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_flasher_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_flasher_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_flasher
}
set obj [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_flasher_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_place_report_io_0] "" ] } {
  create_report_config -report_name impl_flasher_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_flasher
}
set obj [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_flasher_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_flasher_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_flasher
}
set obj [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_flasher_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_flasher_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_flasher
}
set obj [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_place_report_control_sets_0]
if { $obj != "" } {

}
# Create 'impl_flasher_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_flasher_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_flasher
}
set obj [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_flasher_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_flasher_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_flasher
}
set obj [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_flasher_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_flasher_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_flasher
}
set obj [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_flasher_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_flasher_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_flasher
}
set obj [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_flasher_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_flasher_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_flasher
}
set obj [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_flasher_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_flasher_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_flasher
}
set obj [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_flasher_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_flasher_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_flasher
}
set obj [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_flasher_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_route_report_power_0] "" ] } {
  create_report_config -report_name impl_flasher_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_flasher
}
set obj [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_flasher_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_flasher_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_flasher
}
set obj [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_flasher_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_flasher_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_flasher
}
set obj [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_route_report_timing_summary_0]
if { $obj != "" } {

}
# Create 'impl_flasher_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_flasher_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_flasher
}
set obj [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_flasher_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_flasher_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_flasher
}
set obj [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_flasher_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_flasher_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_flasher
}
set obj [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_route_report_bus_skew_0]
if { $obj != "" } {

}
# Create 'impl_flasher_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_flasher_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_flasher
}
set obj [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {

}
# Create 'impl_flasher_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_flasher_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_flasher
}
set obj [get_report_configs -of_objects [get_runs impl_flasher] impl_flasher_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {

}
set obj [get_runs impl_flasher]
set_property -name "constrset" -value "flasher_rm_constr" -objects $obj
set_property -name "needs_refresh" -value "1" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.raw_bitfile" -value "1" -objects $obj
set_property -name "steps.write_bitstream.args.bin_file" -value "1" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "1" -objects $obj


# Create 'impl_empty' run (if not found)
if {[string equal [get_runs -quiet impl_empty] ""]} {
      create_run -name impl_empty -part xcvu9p-fsgd2104-2L-e -flow {Vivado Implementation 2018} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -pr_config config_empty -constrset ethconstrs -parent_run impl_blinker
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_empty]
  set_property flow "Vivado Implementation 2018" [get_runs impl_empty]
}
set obj [get_runs impl_empty]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_empty_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_empty] impl_empty_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_empty_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_empty
}
set obj [get_report_configs -of_objects [get_runs impl_empty] impl_empty_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_empty_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_empty] impl_empty_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_empty_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_empty
}
set obj [get_report_configs -of_objects [get_runs impl_empty] impl_empty_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_empty_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_empty] impl_empty_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_empty_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_empty
}
set obj [get_report_configs -of_objects [get_runs impl_empty] impl_empty_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_empty_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_empty] impl_empty_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_empty_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_empty
}
set obj [get_report_configs -of_objects [get_runs impl_empty] impl_empty_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_empty_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_empty] impl_empty_place_report_io_0] "" ] } {
  create_report_config -report_name impl_empty_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_empty
}
set obj [get_report_configs -of_objects [get_runs impl_empty] impl_empty_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_empty_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_empty] impl_empty_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_empty_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_empty
}
set obj [get_report_configs -of_objects [get_runs impl_empty] impl_empty_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_empty_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_empty] impl_empty_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_empty_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_empty
}
set obj [get_report_configs -of_objects [get_runs impl_empty] impl_empty_place_report_control_sets_0]
if { $obj != "" } {

}
# Create 'impl_empty_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_empty] impl_empty_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_empty_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_empty
}
set obj [get_report_configs -of_objects [get_runs impl_empty] impl_empty_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_empty_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_empty] impl_empty_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_empty_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_empty
}
set obj [get_report_configs -of_objects [get_runs impl_empty] impl_empty_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_empty_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_empty] impl_empty_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_empty_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_empty
}
set obj [get_report_configs -of_objects [get_runs impl_empty] impl_empty_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_empty_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_empty] impl_empty_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_empty_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_empty
}
set obj [get_report_configs -of_objects [get_runs impl_empty] impl_empty_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_empty_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_empty] impl_empty_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_empty_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_empty
}
set obj [get_report_configs -of_objects [get_runs impl_empty] impl_empty_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_empty_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_empty] impl_empty_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_empty_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_empty
}
set obj [get_report_configs -of_objects [get_runs impl_empty] impl_empty_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_empty_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_empty] impl_empty_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_empty_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_empty
}
set obj [get_report_configs -of_objects [get_runs impl_empty] impl_empty_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_empty_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_empty] impl_empty_route_report_power_0] "" ] } {
  create_report_config -report_name impl_empty_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_empty
}
set obj [get_report_configs -of_objects [get_runs impl_empty] impl_empty_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_empty_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_empty] impl_empty_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_empty_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_empty
}
set obj [get_report_configs -of_objects [get_runs impl_empty] impl_empty_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_empty_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_empty] impl_empty_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_empty_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_empty
}
set obj [get_report_configs -of_objects [get_runs impl_empty] impl_empty_route_report_timing_summary_0]
if { $obj != "" } {

}
# Create 'impl_empty_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_empty] impl_empty_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_empty_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_empty
}
set obj [get_report_configs -of_objects [get_runs impl_empty] impl_empty_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_empty_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_empty] impl_empty_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_empty_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_empty
}
set obj [get_report_configs -of_objects [get_runs impl_empty] impl_empty_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_empty_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_empty] impl_empty_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_empty_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_empty
}
set obj [get_report_configs -of_objects [get_runs impl_empty] impl_empty_route_report_bus_skew_0]
if { $obj != "" } {

}
# Create 'impl_empty_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_empty] impl_empty_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_empty_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_empty
}
set obj [get_report_configs -of_objects [get_runs impl_empty] impl_empty_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {

}
# Create 'impl_empty_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_empty] impl_empty_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_empty_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_empty
}
set obj [get_report_configs -of_objects [get_runs impl_empty] impl_empty_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {

}
set obj [get_runs impl_empty]
set_property -name "constrset" -value "ethconstrs" -objects $obj
set_property -name "needs_refresh" -value "1" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.raw_bitfile" -value "1" -objects $obj
set_property -name "steps.write_bitstream.args.bin_file" -value "1" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# set the current impl run
current_run -implementation [get_runs impl_blinker]

puts "INFO: Project created:${_xil_proj_name_}"

update_compile_order -fileset sources_1


# Start processing
puts "INFO: Project Flow is starting..."

# Run synthesis
set_property constrset ethconstrs [get_runs synth_1]

#launch_runs synth_1
#wait_on_run synth_1

#  Run implementation
#update_compile_order -fileset sources_1
#set_property constrset ethconstrs [get_runs impl_blinker]

#set_property STEPS.PHYS_OPT_DESIGN.IS_ENABLED true [get_runs impl_blinker]

#launch_runs impl_1 -to_step write_bitstream
#wait_on_run impl_1
#puts "implementation done!"

puts "INFO: Project Flow has completed successfully"
